{"version":3,"sources":["app/index/core.cljc"],"mappings":";AAMA,AAAA,AAAAA,AAAAC,AAAAC,AAAAC;AAAA;AAAA,AAAA,AAASC,AAAM,AAAA,AAACC;;AAEhB,AAAA,AAAMC;AAAN,AAEK,AAAQ,AAAA,AAAiBC;;AAE9B,AAAA,AAAMC,AAAgCC;AAAtC,AACE,AAAMC,AAAWD;;AACjB,AAAME,AAAO,AAAU,AAAUF;AAAjC,AACE,AAACG,AAAOR,AAAMO;;AAIlB,AAAA,AAAME,AAAcC;AAApB,AACE,AAAMC,AAAc,AAAS,AAAA,AAAiBR;AACxCS,AAAO,AAAAC;AADb,AAEE,AAAA,AAAAC,AAAM,AAAUF;AAAhB,AAAyB,AAAAE,AAACV;;;AAC1B,AAAgBQ,AAAO,AAACG,AAAMJ;;AAElC,AAAA,AAAMK,AAAgBX;AAAtB,AACE,AAAMC,AAAWD;;AACjB,AAAME,AAAO,AAAU,AAAUF;AAC3BY,AAAO,AAAA,AAAgBd;AACvBe,AAAQ,AAAA,AAAaD;AACrBE,AAAM,AAAAC,AAAA,AAAA;AAHZ,AAIE,AAAM,AAAOD,AAAOZ;;AACpB,AAAA,AAAA,AAAA,AAAA,AAAYW,AAAQC;;AACpB,AAAA,AAAA,AAAA,AAAA,AAAWD;;AACX,AAAMG,AAAI,AAAYJ;AAChBK,AAAK,AAAA,AAAgBnB;AAD3B,AAEE,AAAA,AAAM,AAAYmB;;AAClB,AAAM,AAAQA,AAAMD;;AACpB,AAAQC;;AAKd,AAAA,AAAMC;AAAN,AACE,AAAMC,AAAI,AAAA,AAAiBrB;AACrBsB,AAAK,AAAAC,AAAA,AAAA,AAAA,AAAc,AAAaF;AAChCZ,AAAO,AAAAC;AAFb,AAGE,AAAA,AAAAc,AAAM,AAAaf;AAAnB,AAA4B,AAAAe,AAACX;;;AAC7B,AAAgBJ,AAAOa;;AAE3B,AAAA,AAAMI;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEgB;AAFhB,AAIqB,AAAC3B;AAJtB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA0B,AAKiB;AALjB,AAgByB,AAAAA,AAACnB;AAhB1B,AAAA,AAAA,AAkBoB,AAChB,AAAA,AAAAqB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAK9B,AAIcA,AAoBF,AAKlB,AAAA,AAAA8B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAO9B;AAAP,AACkB,AAACuB;AADnB,AAAA","names":["js/app","js/app.index","js/app.index.core","js/app.index.core.image","app.index.core/image","reagent.core.atom","app.index.core/on-click-file","js/document","app.index.core/on-read-file","e","js/console","result","cljs.core/reset!","app.index.core/on-load-file","event","file","reader","js/FileReader","p1__58156#","cljs.core/first","app.index.core/draw-to-canvas","canvas","context","image","js/Image","img","link","app.index.core/generate-icons","svg","blob","js/Blob","p1__58157#","p1__58158#","app.index.core/core","cljs.core/deref"],"sourcesContent":["(ns app.index.core\n  (:require [stylo.core :refer [c]]\n            [reagent.core :as r])\n  )\n\n\n(defonce image (r/atom nil))\n\n(defn on-click-file []\n  #?(:cljs\n     (.click (.getElementById js/document \"icon-file\"))))\n\n(defn on-read-file [^js/ProgressEvent e]\n  (.log js/console e)\n  (let [result (.-result (.-target e))]\n    (reset! image result)\n    ))\n\n\n(defn on-load-file [event]\n  (let [file #?(:cljs (.-files (.getElementById js/document \"icon-file\")))\n        reader (js/FileReader.)]\n    (set! (.-onload reader) #(on-read-file %))\n    (.readAsDataURL reader (first file))))\n\n(defn draw-to-canvas [e]\n  (.log js/console e)\n  (let [result (.-result (.-target e))\n        canvas (.createElement js/document \"canvas\")\n        context (.getContext canvas \"2d\")\n        image (js/Image. \"1024px\" \"1024px\")]\n    (set! (.-src image) result)\n    (.drawImage context image 0 0 \"1024px\" \"1024px\")\n    (.fillRect context 20 20 20 20)\n    (let [img (.toDataURL canvas)\n          link (.createElement js/document \"a\")]\n      (set! (.-download link) \"filename.png\")\n      (set! (.-href link) img)\n      (.click link)\n      )\n    )\n  )\n\n(defn generate-icons []\n  (let [svg (.getElementById js/document \"generated-app-icon\")\n        blob (js/Blob. #js[(.-outerHTML svg)] #js{:type \"image/svg+xml;charset=utf-8\"})\n        reader (js/FileReader.)]\n    (set! (.-onloadend reader) #(draw-to-canvas %))\n    (.readAsDataURL reader blob)))\n\n(defn core []\n  [:<>\n   [:h1 {:class (c :italic)}  \"This is app icon generator\"]\n   \n   [:div {:on-click #(on-click-file)\n          :class (c [:w \"40vh\"]\n                    [:h \"40vh\"]\n                    [:rounded 16]\n                    :overflow-hidden\n                    :border-dashed\n                    [:border 3 :gray-500]\n                    :cursor-pointer\n                    :items-center\n                    :justify-center\n                    :text-lg)}\n    [:input {:id \"icon-file\"\n             :on-change #(on-load-file %)\n             :type \"file\"\n             :class (c :hidden)}]\n    (if @image\n      [:svg\n       {:width \"100%\" :height \"100%\"\n        :id \"generated-app-icon\"}\n       [:image {:href @image\n                :x \"0\"\n                :y \"0\"\n                :width \"100%\"\n                :height \"100%\"}]\n       [:g {:transform \"rotate(-45 50 50)\"}\n        [:rect {:fill \"grey\"\n                :width \"150\"\n                :height \"40\"\n                :x \"-20\"}]\n        [:text {:x \"53\"\n                :y \"23\"\n                :text-anchor \"middle\"\n                :alignment-baseline \"middle\"\n                :fill \"white\"}\n         \"DEMO\"\n         ]]\n       ]\n      [:div \n       \"Drag and drop here\"\n       [:div {:class (c :text-sm [:text :gray-900])}\n        \"or clic to choose file\"]\n       ])    \n    ]\n   \n   (when @image\n     [:a {:on-click #(generate-icons)} \"Download\"])\n   \n   ])\n\n"]}