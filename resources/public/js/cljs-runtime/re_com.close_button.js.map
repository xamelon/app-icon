{"version":3,"sources":["re_com/close_button.cljs"],"mappings":";AAihG,AAAA,AAAMC;AAAN,AAEE,AAAMC,AAAM,AAAA,AAACC;AAAb,AACE;AAAAC;AAAA,AAAA,AAAAC,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAAA,AAC0HkB;AAD1H,AAAAd,AAAAJ,AAAA,AAC0Fc;AAD1F,AAAAV,AAAAJ,AAAA,AAC2DW;AAD3D,AAAAP,AAAAJ,AAAA,AACgHiB;AADhH,AAAAb,AAAAJ,AAAA,AAC8Ea;AAD9E,AAAAT,AAAAJ,AAAA,AAAA,AACyCS;AADzC,AAAAL,AAAAJ,AAAA,AAAA,AAC+BQ;AAD/B,AAAAJ,AAAAJ,AAAA,AAAA,AACsBO;AADtB,AAAAH,AAAAJ,AAAA,AACaM;AADb,AAAAF,AAAAJ,AAAA,AAC0GgB;AAD1G,AAAAZ,AAAAJ,AAAA,AACoGe;AADpG,AAAAX,AAAAJ,AAAA,AACmEY;AADnE,AAAAR,AAAAJ,AAAA,AAAA,AAC+CU;AAD/C,AAAA,AAGS,AAAA,AAAAS,AAAA,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAqBhC,AAAuB6B;AAHrD;AAAA,AAAA,AAAA,AAAAb,AAAA;;;AAIE,AAAMS,AAAW,AAACQ,AAAeR;AAAjC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACGS,AAI0B,AAACC,AAAGjB,AACJ,AAACiB,AAAGjB,AACtBgB,AACOR,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACU,AAEa,AAAA,AAAA,AAAA,AAAUX,AACV,AAACU,AAAGhB,AACJ,AAAA,AAAAkB,AAAK7B,AAAMa,AAAYD,AACvB,AAAA,AAACkB,AAAG,AAAG,AAAA,AAAG,AAAGnB,AAAUD,AAAaK,AACpC,AAAA,AAACe,AAAG,AAAG,AAAA,AAAG,AAAGnB,AAAUD,AAAaM,AAChDG,AACF,AAAA,AAAA,AAAA,AAACS,AACkBd,AACA,AAAAiB;AAAA,AACE,AAAM,AAAAC,AAAKvB;AAAL,AAAA,AAAAuB;AAAc,AAACC,AAAIhB;;AAAnBe;;;AAAN,AACE,AAACvB,AAAAA,AAAAA,AAASsB,AAAAA;;AACV,AAAkBA;;AAFpB;;AADF;AAFnB,AAMmB,AAAAA;AAAA,AAAY,AAAA,AAACG,AAAOlC;;AAApB;AANnB,AAOmB,AAAA+B;AAAA,AAAY,AAAA,AAACG,AAAOlC;;AAApB;AAxBrC,AAAA,AAAA,AAAA,AAAA,AAAA,AAyBoBoB;;;AA7BtBlB;;;;AAAAA;;AAAAA;;;AAAAA;AAAAA","names":["re-com.close-button/close-button-args-desc","cljs.core/fn?","cljs.core/number?","cljs.core/string?","re-com.validate/string-or-hiccup?","re-com.validate/css-style?","re-com.validate/html-attr?","re-com.close-button/close-button","over?","reagent.core.atom","p__62376","map__62379","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","js/Error","on-click","div-size","font-size","color","hover-color","tooltip","top-offset","left-offset","disabled?","class","style","attr","args","js/goog.DEBUG","re_com.validate.validate_args","re-com.validate/extract-arg-data","re-com.util/deref-or-value","re-com.box/box","re-com.util/px","cljs.core.merge","cljs.core/deref","re_com.util.px","event","and__4115__auto__","cljs.core/not","cljs.core/reset!"],"sourcesContent":["(ns re-com.close-button\n  (:require-macros [re-com.core :refer [handler-fn]])\n  (:require [re-com.util     :refer [deref-or-value px]]\n            [re-com.validate :refer [string-or-hiccup? css-style? html-attr?] :refer-macros [validate-args-macro]]\n            [re-com.box      :refer [box]]\n            [reagent.core    :as    reagent]))\n\n\n;; ------------------------------------------------------------------------------------\n;;  Component: close-button\n;;\n;;  Note: Should be in buttons module but that requires popover and\n;;        popover requires this button\n;; ------------------------------------------------------------------------------------\n\n;; TODO: Add a demo page for this\n\n(def close-button-args-desc\n  [{:name :on-click     :required false                   :type \"-> nil\"           :validate-fn fn?                :description \"a function which takes no params and returns nothing. Called when the button is clicked\"}\n   {:name :div-size     :required false  :default 16      :type \"number\"           :validate-fn number?            :description \"numeric px size of the div containing the close button (can be 0 because the 'x' button text is absolutely positioned and centered within the div)\"}\n   {:name :font-size    :required false  :default 16      :type \"number\"           :validate-fn number?            :description \"numeric px font size of the 'x' button text\"}\n   {:name :color        :required false  :default \"#ccc\"  :type \"string\"           :validate-fn string?            :description \"HTML color of the 'x' button text\"}\n   {:name :hover-color  :required false  :default \"#999\"  :type \"string\"           :validate-fn string?            :description \"HTML color of the button text when the mouse is hovering over it\"}\n   {:name :tooltip      :required false                   :type \"string | hiccup\"  :validate-fn string-or-hiccup?  :description \"what to show in the tooltip\"}\n   {:name :top-offset   :required false                   :type \"number\"           :validate-fn number?            :description \"offset the 'x' button text up or down from it's default position in the containing div (can be positive or negative)\"}\n   {:name :left-offset  :required false                   :type \"number\"           :validate-fn number?            :description \"offset the 'x' button text left or right from it's default position in the containing div (can be positive or negative)\"}\n   {:name :disabled?    :required false  :default false   :type \"boolean | atom\"                                   :description \"if true, the user can't click the button\"}\n   {:name :class        :required false                   :type \"string\"           :validate-fn string?            :description \"CSS class names, space separated (applies to the button, not the wrapping div)\"}\n   {:name :style        :required false                   :type \"CSS style map\"    :validate-fn css-style?         :description \"CSS styles (applies to the button, not the wrapping div)\"}\n   {:name :attr         :required false                   :type \"HTML attr map\"    :validate-fn html-attr?         :description [:span \"HTML attributes, like \" [:code \":on-mouse-move\"] [:br] \"No \" [:code \":class\"] \" or \" [:code \":style\"] \"allowed (applies to the button, not the wrapping div)\"]}])\n\n(defn close-button\n  []\n  (let [over? (reagent/atom false)]\n    (fn close-button-render\n      [& {:keys [on-click div-size font-size color hover-color tooltip top-offset left-offset disabled? class style attr] :as args\n          :or   {div-size 16 font-size 16 color \"#ccc\" hover-color \"#999\"}}]\n      {:pre [(validate-args-macro close-button-args-desc args \"close-button\")]}\n      (let [disabled?  (deref-or-value disabled?)]\n        [box\n         :class \"rc-close-button\"\n         :style {:display          \"inline-block\"\n                 :position         \"relative\"\n                 :width            (px div-size)\n                 :height           (px div-size)}\n         :child [box\n                 :class class\n                 :style (merge\n                          {:position  \"absolute\"\n                           :cursor    (when-not disabled? \"pointer\")\n                           :font-size (px font-size)\n                           :color     (if @over? hover-color color)\n                           :top       (px (- (/ (- font-size div-size) 2) top-offset)  :negative)\n                           :left      (px (- (/ (- font-size div-size) 2) left-offset) :negative)}\n                          style)\n                 :attr  (merge\n                          {:title          tooltip\n                           :on-click       (handler-fn\n                                             (when (and on-click (not disabled?))\n                                               (on-click event)\n                                               (.stopPropagation event)))\n                           :on-mouse-enter (handler-fn (reset! over? true))\n                           :on-mouse-leave (handler-fn (reset! over? false))}\n                          attr)\n                 :child [:i {:class \"zmdi zmdi-hc-fw-rc zmdi zmdi-close\"}]]]))))\n"]}