{"version":3,"sources":["stylo/tailwind/variant.cljc"],"mappings":"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","names":["stylo.rule/rule","_","k","rules","cljs.core.into","stylo.rule/join-rules","cljs.core.apply","stylo.tailwind.variant/pseudo-classes","seq__69433","cljs.core/seq","chunk__69434","count__69435","i__69436","temp__5720__auto__","cljs.core/chunked-seq?","c__4556__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","c","stylo.tailwind.variant/pseudo-elements","seq__69438","chunk__69439","count__69440","i__69441","vec__69453","cljs.core.nth","vec__69456","v","cljs.core/set?","p1__69437#","cljs.core.mapcat"],"sourcesContent":["(ns stylo.tailwind.variant\n  (:require\n    [stylo.rule :refer [rule join-rules]]))\n\n\n(defmethod rule :pseudo\n  [_ k & rules]\n  [(into [(str \"&\" k) {}] (join-rules rules))])\n\n\n(defmethod rule :odd\n  [_ & rules]\n  (apply rule :pseudo \":nth-child(odd)\" rules))\n\n\n(defmethod rule :even\n  [_ & rules]\n  (apply rule :pseudo \":nth-child(even)\" rules))\n\n\n(def pseudo-classes\n  [:active\n   :any-link\n   :blank\n   :checked\n   :default\n   :defined\n   :disabled\n   :empty\n   :enabled\n   :first\n   :first-child\n   :first-of-type\n   :focus\n   :focus-visible\n   :focus-within\n   :fullscreen\n   :hover\n   :in-range\n   :indeterminate\n   :invalid\n   :last-child\n   :last-of-type\n   ;;:left\n   :link\n   :only-child\n   :only-of-type\n   :optional\n   :out-of-range\n   :placeholder-shown\n   :read-only\n   :read-write\n   :required\n   ;;:right\n   :root\n   :scope\n   :target\n   :valid\n   :visited])\n\n(doseq [c pseudo-classes]\n  (defmethod rule c\n    [_ & rules]\n    (apply rule :pseudo (str c) rules)))\n\n(def pseudo-elements\n  {:browse                \"::-ms-browse\"\n   :check                 \"::-ms-check\"\n   :clear                 \"::-ms-clear\"\n   :expand                \"::-ms-expand\"\n   :fill                  \"::-ms-fill\"\n   :fill-lower            \"::-ms-fill-lower\"\n   :fill-upper            \"::-ms-fill-upper\"\n   :progress-bar          #{\"::-moz-progress-bar\" \"::-webkit-progress-bar\"}\n   :progress-value        \"::-webkit-progress-value\"\n   :range-progress        \"::-moz-range-progress\"\n   :range-thumb           #{\"::-moz-range-thumb\" \"::-webkit-slider-thumb\"}\n   :range-track           #{\"::-moz-range-track\" \"::-webkit-slider-runnable-track\"}\n   :reveal                \"::-ms-reveal\"\n   :thumb                 \"::-ms-thumb\"\n   :ticks-after           \"::-ms-ticks-after\"\n   :ticks-before          \"::-ms-ticks-before\"\n   :tooltip               \"::-ms-tooltip\"\n   :track                 \"::-ms-track\"\n   :value                 \"::-ms-value\"\n   :after                 \"::after\"\n   :backdrop              \"::backdrop\"\n   :before                \"::before\"\n   :cue                   \"::cue\"\n   :cue-region            \"::cue-region\"\n   :first-letter          \"::first-letter\"\n   :first-line            \"::first-line\"\n   :grammar-error         \"::grammar-error\"\n   :marker                \"::marker\"\n   :placeholder           \"::placeholder\"\n   :selection             \"::selection\"\n   :spelling-error        \"::spelling-error\"})\n\n\n(doseq [[k v] pseudo-elements]\n  (defmethod rule k\n    [_ & rules]\n    (->> (if (set? v) v #{v})\n         (mapcat #(apply rule :pseudo % rules)))))\n\n\n;; These parameterized pseudo-classes and pseudo-elements are not\n;; supported. Use :pseudo rule to use them:\n;;\n;;   [:pseudo \":is(header, main, footer)\" [:text :red-500]]\n;;\n;; :dir()\n;; :has()\n;; :host()\n;; :host-context()\n;; :is() (:matches(), :any())\n;; :lang()\n;; :not()\n;; :nth-child()\n;; :nth-last-child()\n;; :nth-last-of-type()\n;; :nth-of-type()\n;; :where()\n;; ::after (:after)\n;; ::before (:before)\n;; ::first-letter (:first-letter)\n;; ::first-line (:first-line)\n;; ::part()\n;; ::slotted()\n"]}