{"version":3,"sources":["stylo/tailwind/layout.cljc"],"mappings":"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","names":["stylo.rule/rule","_","x","stylo.util.as_unit"],"sourcesContent":["(ns stylo.tailwind.layout\n  (:require\n    [stylo.rule :refer [rule]]\n    [stylo.util :refer [as-unit]]))\n\n\n;; https://tailwindcss.com/docs/box-sizing/#app\n(defmethod rule :box-border [_] [[:& {:box-sizing \"border-box\"}]])\n(defmethod rule :box-content [_] [[:& {:box-sizing \"content-box\"}]])\n\n\n;; https://tailwindcss.com/docs/display/#app\n(defmethod rule :hidden [_] [[:& {:display \"none\"}]])\n(defmethod rule :block [_] [[:& {:display \"block\"}]])\n(defmethod rule :flow-root [_] [[:& {:display \"flow-root\"}]])\n(defmethod rule :inline-block [_] [[:& {:display \"inline-block\"}]])\n(defmethod rule :inline [_] [[:& {:display \"inline\"}]])\n(defmethod rule :inline-flex [_] [[:& {:display \"inline-flex\"}]])\n(defmethod rule :inline-grid [_] [[:& {:display \"inline-grid\"}]])\n\n\n;; https://tailwindcss.com/docs/float/#app\n(defmethod rule :float-right [_] [[:& {:float \"right\"}]])\n(defmethod rule :float-left [_] [[:& {:float \"left\"}]])\n(defmethod rule :float-none [_] [[:& {:float \"none\"}]])\n(defmethod rule :clearfix [_] [[\"&::after\" {:content \"\\\"\\\"\" :display \"table\" :clear \"both\"}]])\n\n\n;; https://tailwindcss.com/docs/clear/#app\n(defmethod rule :clear-left [_] [[:& {:clear \"left\"}]])\n(defmethod rule :clear-right [_] [[:& {:clear \"right\"}]])\n(defmethod rule :clear-both [_] [[:& {:clear \"both\"}]])\n(defmethod rule :clear-none [_] [[:& {:clear \"none\"}]])\n\n\n;; https://tailwindcss.com/docs/object-fit/#app\n(defmethod rule :object-contain [_] [[:& {:object-fit \"contain\"}]])\n(defmethod rule :object-cover [_] [[:& {:object-fit \"cover\"}]])\n(defmethod rule :object-fill [_] [[:& {:object-fit \"fill\"}]])\n(defmethod rule :object-none [_] [[:& {:object-fit \"none\"}]])\n(defmethod rule :object-scale-down [_] [[:& {:object-fit \"scale-down\"}]])\n\n\n;; https://tailwindcss.com/docs/object-position/#app\n(defmethod rule :object-bottom [_] [[:& {:object-position \"bottom\"}]])\n(defmethod rule :object-center [_] [[:& {:object-position \"center\"}]])\n(defmethod rule :object-left [_] [[:& {:object-position \"left\"}]])\n(defmethod rule :object-left-bottom [_] [[:& {:object-position \"left bottom\"}]])\n(defmethod rule :object-left-top [_] [[:& {:object-position \"left top\"}]])\n(defmethod rule :object-right [_] [[:& {:object-position \"right\"}]])\n(defmethod rule :object-right-bottom [_] [[:& {:object-position \"right bottom\"}]])\n(defmethod rule :object-right-top [_] [[:& {:object-position \"right top\"}]])\n(defmethod rule :object-top [_] [[:& {:object-position \"top\"}]])\n\n\n;; https://tailwindcss.com/docs/overflow/#app\n(defmethod rule :overflow-auto [_] [[:& {:overflow \"auto\"}]])\n(defmethod rule :overflow-hidden [_] [[:& {:overflow \"hidden\"}]])\n(defmethod rule :overflow-visible [_] [[:& {:overflow \"visible\"}]])\n(defmethod rule :overflow-scroll [_] [[:& {:overflow \"scroll\"}]])\n(defmethod rule :overflow-x-auto [_] [[:& {:overflow-x \"auto\"}]])\n(defmethod rule :overflow-y-auto [_] [[:& {:overflow-y \"auto\"}]])\n(defmethod rule :overflow-x-hidden [_] [[:& {:overflow-x \"hidden\"}]])\n(defmethod rule :overflow-y-hidden [_] [[:& {:overflow-y \"hidden\"}]])\n(defmethod rule :overflow-x-visible [_] [[:& {:overflow-x \"visible\"}]])\n(defmethod rule :overflow-y-visible [_] [[:& {:overflow-y \"visible\"}]])\n(defmethod rule :overflow-x-scroll [_] [[:& {:overflow-x \"scroll\"}]])\n(defmethod rule :overflow-y-scroll [_] [[:& {:overflow-y \"scroll\"}]])\n(defmethod rule :scrolling-touch [_] [[:& {:-webkit-overflow-scrolling \"touch\"}]])\n(defmethod rule :scrolling-auto [_] [[:& {:-webkit-overflow-scrolling \"auto\"}]])\n\n\n;; https://tailwindcss.com/docs/position/#app\n(defmethod rule :static [_] [[:& {:position \"static\"}]])\n(defmethod rule :fixed [_] [[:& {:position \"fixed\"}]])\n(defmethod rule :absolute [_] [[:& {:position \"absolute\"}]])\n(defmethod rule :relative [_] [[:& {:position \"relative\"}]])\n(defmethod rule :sticky [_] [[:& {:position \"sticky\"}]])\n\n\n;; https://tailwindcss.com/docs/top-right-bottom-left/#app\n(defmethod rule :inset-auto [_] [[:& {:top \"auto\" :right \"auto\" :bottom \"auto\" :left \"auto\"}]])\n(defmethod rule :inset [_ x] [[:& {:top (as-unit x) :right (as-unit x) :bottom (as-unit x) :left (as-unit x)}]])\n(defmethod rule :inset-x-auto [_] [[:& {:left \"auto\" :right \"auto\"}]])\n(defmethod rule :inset-x [_ x] [[:& {:left (as-unit x) :right (as-unit x)}]])\n(defmethod rule :inset-y-auto [_] [[:& {:top \"auto\" :bottom \"auto\"}]])\n(defmethod rule :inset-y [_ x] [[:& {:top (as-unit x) :bottom (as-unit x)}]])\n(defmethod rule :top [_ x] [[:& {:top (as-unit x)}]])\n(defmethod rule :top-auto [_] [[:& {:top \"auto\"}]])\n(defmethod rule :right [_ x] [[:& {:right (as-unit x)}]])\n(defmethod rule :right-auto [_] [[:& {:right \"auto\"}]])\n(defmethod rule :bottom [_ x] [[:& {:bottom (as-unit x)}]])\n(defmethod rule :bottom-auto [_] [[:& {:bottom \"auto\"}]])\n(defmethod rule :left [_ x] [[:& {:left (as-unit x)}]])\n(defmethod rule :left-auto [_] [[:& {:left \"auto\"}]])\n\n\n;; https://tailwindcss.com/docs/visibility/#app\n(defmethod rule :visible [_] [[:& {:visibility \"visible\"}]])\n(defmethod rule :invisible [_] [[:& {:visibility \"hidden\"}]])\n\n\n;; https://tailwindcss.com/docs/z-index/#app\n(defmethod rule :z-auto [_] [[:& {:z-index \"auto\"}]])\n(defmethod rule :z [_ x] [[:& {:z-index x}]])\n"]}