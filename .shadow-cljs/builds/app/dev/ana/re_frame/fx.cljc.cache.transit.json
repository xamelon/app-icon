["^ ","~:output",["^ ","~:js","goog.provide('re_frame.fx');\nre_frame.fx.kind = new cljs.core.Keyword(null,\"fx\",\"fx\",-1237829572);\nif(cljs.core.truth_((re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1 ? re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1(re_frame.fx.kind) : re_frame.registrar.kinds.call(null,re_frame.fx.kind)))){\n} else {\nthrow (new Error(\"Assert failed: (re-frame.registrar/kinds kind)\"));\n}\n/**\n * Register the given effect `handler` for the given `id`.\n * \n *   `id` is keyword, often namespaced.\n *   `handler` is a side-effecting function which takes a single argument and whose return\n *   value is ignored.\n * \n *   Example Use\n *   -----------\n * \n *   First, registration ... associate `:effect2` with a handler.\n * \n *   (reg-fx\n *   :effect2\n *   (fn [value]\n *      ... do something side-effect-y))\n * \n *   Then, later, if an event handler were to return this effects map ...\n * \n *   {...\n * :effect2  [1 2]}\n * \n * ... then the `handler` `fn` we registered previously, using `reg-fx`, will be\n * called with an argument of `[1 2]`.\n */\nre_frame.fx.reg_fx = (function re_frame$fx$reg_fx(id,handler){\nreturn re_frame.registrar.register_handler(re_frame.fx.kind,id,handler);\n});\n/**\n * An interceptor whose `:after` actions the contents of `:effects`. As a result,\n *   this interceptor is Domino 3.\n * \n *   This interceptor is silently added (by reg-event-db etc) to the front of\n *   interceptor chains for all events.\n * \n *   For each key in `:effects` (a map), it calls the registered `effects handler`\n *   (see `reg-fx` for registration of effect handlers).\n * \n *   So, if `:effects` was:\n *    {:dispatch  [:hello 42]\n *     :db        {...}\n *     :undo      \"set flag\"}\n * \n *   it will call the registered effect handlers for each of the map's keys:\n *   `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n *   value for that key - so in the example above the effect handler for :dispatch\n *   will be given one arg `[:hello 42]`.\n * \n *   You cannot rely on the ordering in which effects are executed.\n */\nre_frame.fx.do_fx = re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),new cljs.core.Keyword(null,\"do-fx\",\"do-fx\",1194163050),new cljs.core.Keyword(null,\"after\",\"after\",594996914),(function re_frame$fx$do_fx_after(context){\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar _STAR_current_trace_STAR__orig_val__61674 = re_frame.trace._STAR_current_trace_STAR_;\nvar _STAR_current_trace_STAR__temp_val__61675 = re_frame.trace.start_trace(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),new cljs.core.Keyword(\"event\",\"do-fx\",\"event/do-fx\",1357330452)], null));\n(re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__temp_val__61675);\n\ntry{try{var seq__61676 = cljs.core.seq(new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292).cljs$core$IFn$_invoke$arity$1(context));\nvar chunk__61677 = null;\nvar count__61678 = (0);\nvar i__61679 = (0);\nwhile(true){\nif((i__61679 < count__61678)){\nvar vec__61694 = chunk__61677.cljs$core$IIndexed$_nth$arity$2(null,i__61679);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61694,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61694,(1),null);\nvar temp__5718__auto___61775 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5718__auto___61775)){\nvar effect_fn_61776 = temp__5718__auto___61775;\n(effect_fn_61776.cljs$core$IFn$_invoke$arity$1 ? effect_fn_61776.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_61776.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__61777 = seq__61676;\nvar G__61778 = chunk__61677;\nvar G__61779 = count__61678;\nvar G__61780 = (i__61679 + (1));\nseq__61676 = G__61777;\nchunk__61677 = G__61778;\ncount__61678 = G__61779;\ni__61679 = G__61780;\ncontinue;\n} else {\nvar temp__5720__auto__ = cljs.core.seq(seq__61676);\nif(temp__5720__auto__){\nvar seq__61676__$1 = temp__5720__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__61676__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__61676__$1);\nvar G__61781 = cljs.core.chunk_rest(seq__61676__$1);\nvar G__61782 = c__4556__auto__;\nvar G__61783 = cljs.core.count(c__4556__auto__);\nvar G__61784 = (0);\nseq__61676 = G__61781;\nchunk__61677 = G__61782;\ncount__61678 = G__61783;\ni__61679 = G__61784;\ncontinue;\n} else {\nvar vec__61698 = cljs.core.first(seq__61676__$1);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61698,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61698,(1),null);\nvar temp__5718__auto___61785 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5718__auto___61785)){\nvar effect_fn_61786 = temp__5718__auto___61785;\n(effect_fn_61786.cljs$core$IFn$_invoke$arity$1 ? effect_fn_61786.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_61786.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__61787 = cljs.core.next(seq__61676__$1);\nvar G__61788 = null;\nvar G__61789 = (0);\nvar G__61790 = (0);\nseq__61676 = G__61787;\nchunk__61677 = G__61788;\ncount__61678 = G__61789;\ni__61679 = G__61790;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}finally {if(re_frame.trace.is_trace_enabled_QMARK_()){\nvar end__54191__auto___61791 = re_frame.interop.now();\nvar duration__54192__auto___61792 = (end__54191__auto___61791 - new cljs.core.Keyword(null,\"start\",\"start\",-355208981).cljs$core$IFn$_invoke$arity$1(re_frame.trace._STAR_current_trace_STAR_));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(re_frame.trace.traces,cljs.core.conj,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"duration\",\"duration\",1444101068),duration__54192__auto___61792,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"end\",\"end\",-268185958),re_frame.interop.now()], 0)));\n\nre_frame.trace.run_tracing_callbacks_BANG_(end__54191__auto___61791);\n} else {\n}\n}}finally {(re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__orig_val__61674);\n}} else {\nvar seq__61702 = cljs.core.seq(new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292).cljs$core$IFn$_invoke$arity$1(context));\nvar chunk__61703 = null;\nvar count__61704 = (0);\nvar i__61705 = (0);\nwhile(true){\nif((i__61705 < count__61704)){\nvar vec__61718 = chunk__61703.cljs$core$IIndexed$_nth$arity$2(null,i__61705);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61718,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61718,(1),null);\nvar temp__5718__auto___61793 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5718__auto___61793)){\nvar effect_fn_61794 = temp__5718__auto___61793;\n(effect_fn_61794.cljs$core$IFn$_invoke$arity$1 ? effect_fn_61794.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_61794.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__61795 = seq__61702;\nvar G__61796 = chunk__61703;\nvar G__61797 = count__61704;\nvar G__61798 = (i__61705 + (1));\nseq__61702 = G__61795;\nchunk__61703 = G__61796;\ncount__61704 = G__61797;\ni__61705 = G__61798;\ncontinue;\n} else {\nvar temp__5720__auto__ = cljs.core.seq(seq__61702);\nif(temp__5720__auto__){\nvar seq__61702__$1 = temp__5720__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__61702__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__61702__$1);\nvar G__61799 = cljs.core.chunk_rest(seq__61702__$1);\nvar G__61800 = c__4556__auto__;\nvar G__61801 = cljs.core.count(c__4556__auto__);\nvar G__61802 = (0);\nseq__61702 = G__61799;\nchunk__61703 = G__61800;\ncount__61704 = G__61801;\ni__61705 = G__61802;\ncontinue;\n} else {\nvar vec__61723 = cljs.core.first(seq__61702__$1);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61723,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__61723,(1),null);\nvar temp__5718__auto___61803 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5718__auto___61803)){\nvar effect_fn_61804 = temp__5718__auto___61803;\n(effect_fn_61804.cljs$core$IFn$_invoke$arity$1 ? effect_fn_61804.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_61804.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__61805 = cljs.core.next(seq__61702__$1);\nvar G__61806 = null;\nvar G__61807 = (0);\nvar G__61808 = (0);\nseq__61702 = G__61805;\nchunk__61703 = G__61806;\ncount__61704 = G__61807;\ni__61705 = G__61808;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n})], 0));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch-later\",\"dispatch-later\",291951390),(function (value){\nvar seq__61728 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,value));\nvar chunk__61729 = null;\nvar count__61730 = (0);\nvar i__61731 = (0);\nwhile(true){\nif((i__61731 < count__61730)){\nvar map__61742 = chunk__61729.cljs$core$IIndexed$_nth$arity$2(null,i__61731);\nvar map__61742__$1 = (((((!((map__61742 == null))))?(((((map__61742.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__61742.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__61742):map__61742);\nvar effect = map__61742__$1;\nvar ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61742__$1,new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\nvar dispatch = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61742__$1,new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009));\nif(((cljs.core.empty_QMARK_(dispatch)) || ((!(typeof ms === 'number'))))){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-later value:\",effect], 0));\n} else {\nre_frame.interop.set_timeout_BANG_(((function (seq__61728,chunk__61729,count__61730,i__61731,map__61742,map__61742__$1,effect,ms,dispatch){\nreturn (function (){\nreturn re_frame.router.dispatch(dispatch);\n});})(seq__61728,chunk__61729,count__61730,i__61731,map__61742,map__61742__$1,effect,ms,dispatch))\n,ms);\n}\n\n\nvar G__61809 = seq__61728;\nvar G__61810 = chunk__61729;\nvar G__61811 = count__61730;\nvar G__61812 = (i__61731 + (1));\nseq__61728 = G__61809;\nchunk__61729 = G__61810;\ncount__61730 = G__61811;\ni__61731 = G__61812;\ncontinue;\n} else {\nvar temp__5720__auto__ = cljs.core.seq(seq__61728);\nif(temp__5720__auto__){\nvar seq__61728__$1 = temp__5720__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__61728__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__61728__$1);\nvar G__61813 = cljs.core.chunk_rest(seq__61728__$1);\nvar G__61814 = c__4556__auto__;\nvar G__61815 = cljs.core.count(c__4556__auto__);\nvar G__61816 = (0);\nseq__61728 = G__61813;\nchunk__61729 = G__61814;\ncount__61730 = G__61815;\ni__61731 = G__61816;\ncontinue;\n} else {\nvar map__61746 = cljs.core.first(seq__61728__$1);\nvar map__61746__$1 = (((((!((map__61746 == null))))?(((((map__61746.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__61746.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__61746):map__61746);\nvar effect = map__61746__$1;\nvar ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61746__$1,new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\nvar dispatch = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__61746__$1,new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009));\nif(((cljs.core.empty_QMARK_(dispatch)) || ((!(typeof ms === 'number'))))){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-later value:\",effect], 0));\n} else {\nre_frame.interop.set_timeout_BANG_(((function (seq__61728,chunk__61729,count__61730,i__61731,map__61746,map__61746__$1,effect,ms,dispatch,seq__61728__$1,temp__5720__auto__){\nreturn (function (){\nreturn re_frame.router.dispatch(dispatch);\n});})(seq__61728,chunk__61729,count__61730,i__61731,map__61746,map__61746__$1,effect,ms,dispatch,seq__61728__$1,temp__5720__auto__))\n,ms);\n}\n\n\nvar G__61817 = cljs.core.next(seq__61728__$1);\nvar G__61818 = null;\nvar G__61819 = (0);\nvar G__61820 = (0);\nseq__61728 = G__61817;\nchunk__61729 = G__61818;\ncount__61730 = G__61819;\ni__61731 = G__61820;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009),(function (value){\nif((!(cljs.core.vector_QMARK_(value)))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch value. Expected a vector, but got:\",value], 0));\n} else {\nreturn re_frame.router.dispatch(value);\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch-n\",\"dispatch-n\",-504469236),(function (value){\nif((!(cljs.core.sequential_QMARK_(value)))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-n value. Expected a collection, but got:\",value], 0));\n} else {\nvar seq__61751 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,value));\nvar chunk__61752 = null;\nvar count__61753 = (0);\nvar i__61754 = (0);\nwhile(true){\nif((i__61754 < count__61753)){\nvar event = chunk__61752.cljs$core$IIndexed$_nth$arity$2(null,i__61754);\nre_frame.router.dispatch(event);\n\n\nvar G__61823 = seq__61751;\nvar G__61824 = chunk__61752;\nvar G__61825 = count__61753;\nvar G__61826 = (i__61754 + (1));\nseq__61751 = G__61823;\nchunk__61752 = G__61824;\ncount__61753 = G__61825;\ni__61754 = G__61826;\ncontinue;\n} else {\nvar temp__5720__auto__ = cljs.core.seq(seq__61751);\nif(temp__5720__auto__){\nvar seq__61751__$1 = temp__5720__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__61751__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__61751__$1);\nvar G__61830 = cljs.core.chunk_rest(seq__61751__$1);\nvar G__61831 = c__4556__auto__;\nvar G__61832 = cljs.core.count(c__4556__auto__);\nvar G__61833 = (0);\nseq__61751 = G__61830;\nchunk__61752 = G__61831;\ncount__61753 = G__61832;\ni__61754 = G__61833;\ncontinue;\n} else {\nvar event = cljs.core.first(seq__61751__$1);\nre_frame.router.dispatch(event);\n\n\nvar G__61834 = cljs.core.next(seq__61751__$1);\nvar G__61835 = null;\nvar G__61836 = (0);\nvar G__61837 = (0);\nseq__61751 = G__61834;\nchunk__61752 = G__61835;\ncount__61753 = G__61836;\ni__61754 = G__61837;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"deregister-event-handler\",\"deregister-event-handler\",-1096518994),(function (value){\nvar clear_event = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(re_frame.registrar.clear_handlers,re_frame.events.kind);\nif(cljs.core.sequential_QMARK_(value)){\nvar seq__61758 = cljs.core.seq(value);\nvar chunk__61759 = null;\nvar count__61760 = (0);\nvar i__61761 = (0);\nwhile(true){\nif((i__61761 < count__61760)){\nvar event = chunk__61759.cljs$core$IIndexed$_nth$arity$2(null,i__61761);\nclear_event(event);\n\n\nvar G__61838 = seq__61758;\nvar G__61839 = chunk__61759;\nvar G__61840 = count__61760;\nvar G__61841 = (i__61761 + (1));\nseq__61758 = G__61838;\nchunk__61759 = G__61839;\ncount__61760 = G__61840;\ni__61761 = G__61841;\ncontinue;\n} else {\nvar temp__5720__auto__ = cljs.core.seq(seq__61758);\nif(temp__5720__auto__){\nvar seq__61758__$1 = temp__5720__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__61758__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__61758__$1);\nvar G__61842 = cljs.core.chunk_rest(seq__61758__$1);\nvar G__61843 = c__4556__auto__;\nvar G__61844 = cljs.core.count(c__4556__auto__);\nvar G__61845 = (0);\nseq__61758 = G__61842;\nchunk__61759 = G__61843;\ncount__61760 = G__61844;\ni__61761 = G__61845;\ncontinue;\n} else {\nvar event = cljs.core.first(seq__61758__$1);\nclear_event(event);\n\n\nvar G__61846 = cljs.core.next(seq__61758__$1);\nvar G__61847 = null;\nvar G__61848 = (0);\nvar G__61849 = (0);\nseq__61758 = G__61846;\nchunk__61759 = G__61847;\ncount__61760 = G__61848;\ni__61761 = G__61849;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n} else {\nreturn clear_event(value);\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"db\",\"db\",993250759),(function (value){\nif((!((cljs.core.deref(re_frame.db.app_db) === value)))){\nreturn cljs.core.reset_BANG_(re_frame.db.app_db,value);\n} else {\nreturn null;\n}\n}));\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","re_frame/fx.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",16],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.pprint","~$cljs.pprint"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$re-frame.fx","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$re-frame.interop","^M","~$re-frame.interceptor","^N","~$re-frame.events","^O","~$re-frame.trace","^P","~$re-frame.registrar","^Q","~$cljs.core","^R","~$goog","^S","~$router","~$re-frame.router","^U","^U","~$trace","^P","~$events","^O","~$re-frame.loggers","^X","~$re-frame.db","^Y"],"~:seen",["^F",["~:require"]],"~:uses",["^ ","~$app-db","^Y","~$->interceptor","^N","~$set-timeout!","^M","~$get-handler","^Q","~$clear-handlers","^Q","~$register-handler","^Q","~$console","^X"],"~:require-macros",["^ ","^P","^P","^V","^P","^R","^R"],"~:form",["~#list",["~$ns","^H",["^1:",["^[",["^U","~:as","^T"],["^Y","~:refer",["^11"]],["^N","^1=",["^12"]],["^M","^1=",["^13"]],["^O","^1<","^W"],["^Q","^1=",["^14","^15","^16"]],["^X","^1=",["^17"]],["^P","^1<","^V","~:include-macros",true]]]]],"~:flags",["^ ","^[",["^F",[]]],"~:js-deps",["^ "],"~:deps",["^S","^R","^U","^Y","^N","^M","^O","^Q","^X","^P"]],"^J","^H","~:resource-id",["~:shadow.build.classpath/resource","re_frame/fx.cljc"],"~:compiled-at",1610009129655,"~:resource-name","re_frame/fx.cljc","~:warnings",[],"~:source","(ns re-frame.fx\n  (:require\n    [re-frame.router      :as router]\n    [re-frame.db          :refer [app-db]]\n    [re-frame.interceptor :refer [->interceptor]]\n    [re-frame.interop     :refer [set-timeout!]]\n    [re-frame.events      :as events]\n    [re-frame.registrar   :refer [get-handler clear-handlers register-handler]]\n    [re-frame.loggers     :refer [console]]\n    [re-frame.trace :as trace :include-macros true]))\n\n\n;; -- Registration ------------------------------------------------------------\n\n(def kind :fx)\n(assert (re-frame.registrar/kinds kind))\n\n(defn reg-fx\n  \"Register the given effect `handler` for the given `id`.\n\n  `id` is keyword, often namespaced.\n  `handler` is a side-effecting function which takes a single argument and whose return\n  value is ignored.\n\n  Example Use\n  -----------\n\n  First, registration ... associate `:effect2` with a handler.\n\n  (reg-fx\n     :effect2\n     (fn [value]\n        ... do something side-effect-y))\n\n  Then, later, if an event handler were to return this effects map ...\n\n  {...\n   :effect2  [1 2]}\n\n   ... then the `handler` `fn` we registered previously, using `reg-fx`, will be\n   called with an argument of `[1 2]`.\"\n  [id handler]\n  (register-handler kind id handler))\n\n;; -- Interceptor -------------------------------------------------------------\n\n(def do-fx\n  \"An interceptor whose `:after` actions the contents of `:effects`. As a result,\n  this interceptor is Domino 3.\n\n  This interceptor is silently added (by reg-event-db etc) to the front of\n  interceptor chains for all events.\n\n  For each key in `:effects` (a map), it calls the registered `effects handler`\n  (see `reg-fx` for registration of effect handlers).\n\n  So, if `:effects` was:\n      {:dispatch  [:hello 42]\n       :db        {...}\n       :undo      \\\"set flag\\\"}\n\n  it will call the registered effect handlers for each of the map's keys:\n  `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n  value for that key - so in the example above the effect handler for :dispatch\n  will be given one arg `[:hello 42]`.\n\n  You cannot rely on the ordering in which effects are executed.\"\n  (->interceptor\n    :id :do-fx\n    :after (fn do-fx-after\n             [context]\n             (trace/with-trace\n               {:op-type :event/do-fx}\n               (doseq [[effect-key effect-value] (:effects context)]\n                 (if-let [effect-fn (get-handler kind effect-key false)]\n                   (effect-fn effect-value)\n                   (console :error \"re-frame: no handler registered for effect:\" effect-key \". Ignoring.\")))))))\n\n;; -- Builtin Effect Handlers  ------------------------------------------------\n\n;; :dispatch-later\n;;\n;; `dispatch` one or more events after given delays. Expects a collection\n;; of maps with two keys:  :`ms` and `:dispatch`\n;;\n;; usage:\n;;\n;;    {:dispatch-later [{:ms 200 :dispatch [:event-id \"param\"]}    ;;  in 200ms do this: (dispatch [:event-id \"param\"])\n;;                      {:ms 100 :dispatch [:also :this :in :100ms]}]}\n;;\n;; Note: nil entries in the collection are ignored which means events can be added\n;; conditionally:\n;;    {:dispatch-later [ (when (> 3 5) {:ms 200 :dispatch [:conditioned-out]})\n;;                       {:ms 100 :dispatch [:another-one]}]}\n;;\n(reg-fx\n  :dispatch-later\n  (fn [value]\n    (doseq [{:keys [ms dispatch] :as effect} (remove nil? value)]\n        (if (or (empty? dispatch) (not (number? ms)))\n          (console :error \"re-frame: ignoring bad :dispatch-later value:\" effect)\n          (set-timeout! #(router/dispatch dispatch) ms)))))\n\n\n;; :dispatch\n;;\n;; `dispatch` one event. Expects a single vector.\n;;\n;; usage:\n;;   {:dispatch [:event-id \"param\"] }\n\n(reg-fx\n  :dispatch\n  (fn [value]\n    (if-not (vector? value)\n      (console :error \"re-frame: ignoring bad :dispatch value. Expected a vector, but got:\" value)\n      (router/dispatch value))))\n\n\n;; :dispatch-n\n;;\n;; `dispatch` more than one event. Expects a list or vector of events. Something for which\n;; sequential? returns true.\n;;\n;; usage:\n;;   {:dispatch-n (list [:do :all] [:three :of] [:these])}\n;;\n;; Note: nil events are ignored which means events can be added\n;; conditionally:\n;;    {:dispatch-n (list (when (> 3 5) [:conditioned-out])\n;;                       [:another-one])}\n;;\n(reg-fx\n  :dispatch-n\n  (fn [value]\n    (if-not (sequential? value)\n      (console :error \"re-frame: ignoring bad :dispatch-n value. Expected a collection, but got:\" value)\n      (doseq [event (remove nil? value)] (router/dispatch event)))))\n\n\n;; :deregister-event-handler\n;;\n;; removes a previously registered event handler. Expects either a single id (\n;; typically a namespaced keyword), or a seq of ids.\n;;\n;; usage:\n;;   {:deregister-event-handler :my-id)}\n;; or:\n;;   {:deregister-event-handler [:one-id :another-id]}\n;;\n(reg-fx\n  :deregister-event-handler\n  (fn [value]\n    (let [clear-event (partial clear-handlers events/kind)]\n      (if (sequential? value)\n        (doseq [event value] (clear-event event))\n        (clear-event value)))))\n\n\n;; :db\n;;\n;; reset! app-db with a new value. `value` is expected to be a map.\n;;\n;; usage:\n;;   {:db  {:key1 value1 key2 value2}}\n;;\n(reg-fx\n  :db\n  (fn [value]\n    (if-not (identical? @app-db value)\n      (reset! app-db value))))\n\n","~:reader-features",["^F",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["re-frame.fx/kind","js/Error","re-frame.registrar/kinds","re-frame.fx/reg-fx","id","handler","re-frame.registrar/register-handler","re-frame.fx/do-fx","re_frame.interceptor.__GT_interceptor","context","re-frame.trace/is-trace-enabled?","*current-trace*-orig-val__61674","re-frame.trace/*current-trace*","*current-trace*-temp-val__61675","re-frame.trace/start-trace","end__54191__auto__","re-frame.interop/now","duration__54192__auto__","cljs.core.swap_BANG_","re-frame.trace/traces","cljs.core/conj","cljs.core.assoc","re-frame.trace/run-tracing-callbacks!","seq__61676","cljs.core/seq","chunk__61677","count__61678","i__61679","vec__61694","cljs.core.nth","temp__5720__auto__","cljs.core/chunked-seq?","c__4556__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","vec__61698","cljs.core/first","cljs.core/next","seq__61702","chunk__61703","count__61704","i__61705","vec__61718","vec__61723","effect-key","effect-value","temp__5718__auto__","effect-fn","re_frame.registrar.get_handler","re_frame.loggers.console","value","seq__61728","chunk__61729","count__61730","i__61731","map__61742","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","map__61746","ms","dispatch","effect","cljs.core.remove","cljs.core/nil?","cljs.core/empty?","re-frame.interop/set-timeout!","re-frame.router/dispatch","cljs.core/vector?","cljs.core/sequential?","seq__61751","chunk__61752","count__61753","i__61754","event","clear-event","cljs.core.partial","re-frame.registrar/clear-handlers","re-frame.events/kind","seq__61758","chunk__61759","count__61760","i__61761","cljs.core/deref","re-frame.db/app-db","cljs.core/reset!"]],"~:used-vars",["^F",["~$re-frame.fx/kind","~$cljs.core/sequential?","~$re-frame.fx/reg-fx","~$re-frame.db/app-db","~$re-frame.fx/do-fx","~$cljs.core/vector?","~$re-frame.trace/traces","~$re-frame.interceptor/->interceptor","~$cljs.core/count","~$cljs.core/deref","~$re-frame.registrar/kinds","~$re-frame.loggers/console","~$cljs.core/chunk-rest","~$re-frame.interop/now","~$cljs.core/empty?","~$cljs.core/reset!","~$re-frame.registrar/register-handler","~$cljs.core/conj","~$cljs.core/swap!","~$re-frame.trace/is-trace-enabled?","~$re-frame.trace/*current-trace*","~$cljs.core/next","~$cljs.core/not","~$cljs.core/assoc","~$re-frame.router/dispatch","~$re-frame.trace/run-tracing-callbacks!","~$re-frame.interop/set-timeout!","~$js/Error","~$cljs.core/chunked-seq?"]]],"~:cache-keys",["~#cmap",[["~:shadow.build.npm/resource","node_modules/react-dom/index.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","dc3011a0ee823c91a565237d17cbc3c0856de8a6","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^F",[]],"~:deps-syms",["~$shadow.js","~$module$node_modules$react_dom$cjs$react_dom_production_min","~$module$node_modules$react_dom$cjs$react_dom_development"]]],["^1C","reagent/impl/batching.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^R","~$reagent.debug","~$reagent.impl.util"]]],["^1C","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","~$goog.dom.HtmlElement"]]],["^1C","goog/labs/useragent/platform.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","~$goog.labs.userAgent.util","~$goog.string"]]],["^1C","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","~$goog.array","~$goog.asserts"]]],["^1C","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S"]]],["^1C","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^2O","^2M","~$goog.object","~$goog.string.internal"]]],["^1C","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^2P","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2R"]]],["^1C","re_frame/loggers.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^R","~$clojure.set"]]],["^1C","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^2P"]]],["^1C","reagent/impl/util.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^R","~$clojure.string"]]],["^1C","goog/useragent/useragent.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^2M","~$goog.reflect","^2N"]]],["^1C","re_frame/router.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^R","^O","^M","^X","^P"]]],["^1C","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S"]]],["^1C","re_frame/registrar.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^R","^M","^X"]]],["^1C","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S"]]],["^2B","node_modules/scheduler/cjs/scheduler.development.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","956381311c5b98c5ba17b2806eca8cde71a1bc3c","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^2G"]]],["^1C","reagent/ratom.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^R","^2K","^2J","~$reagent.impl.batching","^2Y","^2Q"]]],["^2B","node_modules/scheduler/cjs/scheduler.production.min.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","ce207e95c8f4ee3e3ef95cfb45c968def21363c3","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^2G"]]],["^1C","re_frame/interop.cljs"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^R","~$goog.async.nextTick","~$reagent.core","~$reagent.ratom"]]],["^1C","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S"]]],["^2B","node_modules/scheduler/cjs/scheduler-tracing.production.min.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","fd87e5f8ce72cde17aca16ff180bf833f8d13252","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^2G"]]],["^2B","node_modules/react/index.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","a69a7f3d4a4636bf9035bc53c05b2d99a7b8af7f","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^2G","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1C","shadow/js.js"],["c4a6899cfddd1ca637fb6c2116265465e58fb94b","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S"]]],["^1C","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S"]]],["^1C","reagent/impl/template.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^R","^?","^2Z","~$clojure.walk","^2K","~$reagent.impl.component","^33","^36","^2J","^2Q"]]],["^1C","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^2P"]]],["^2B","node_modules/react-dom/cjs/react-dom.production.min.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","c0a9a12882b6a3b459895ee85a69e94ac86fff02","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^2G","^?","~$module$node_modules$object_assign$index","~$module$node_modules$scheduler$index"]]],"~:SHADOW-TIMESTAMP",[1608791626000,1608791626000,1608497483000],["^2B","node_modules/react/cjs/react.development.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","2d5bc5b3fb2e19279e31e634b0695b1fd96a54f3","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^2G","^3;"]]],["^1C","re_frame/events.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^R","^Y","~$re-frame.utils","^M","^Q","^X","^N","^P"]]],["^1C","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^2P","^32"]]],["^1C","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^2P","~$goog.html.trustedtypes","^2U","^2V","^2W","^2X"]]],["^1C","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S"]]],["^2B","node_modules/scheduler/cjs/scheduler-tracing.development.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","21041c162a5fe777e8ca20858110902092bd0dc2","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^2G"]]],["^1C","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S"]]],["^1C","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^2O","^2P","~$goog.html.SafeUrl","^2W","^2X","^2R"]]],["^1C","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^2P","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^3@","^2T","~$goog.html.uncheckedconversions","^2W","^2R"]]],["^1C","reagent/impl/component.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^R","^2Q","^?","^2K","^33","^36","^2J"]]],["^1C","clojure/walk.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^R"]]],["^1C","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1C","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^2O","^2P","~$goog.dom.TagName","~$goog.dom.tags","^3D","^3E","~$goog.html.SafeStyleSheet","^3@","^2T","^3?","^2U","^2V","^2[","^2Q","^2W","^2X","^2R"]]],["^1C","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^2Q"]]],["^1C","goog/math/size.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S"]]],["^2B","node_modules/scheduler/index.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","408126fc2241739168bcaf5965ae56a7df143144","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^2G","~$module$node_modules$scheduler$cjs$scheduler_production_min","~$module$node_modules$scheduler$cjs$scheduler_development"]]],["^1C","goog/labs/useragent/engine.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^2O","^2M","^2N"]]],["^1C","goog/dom/dom.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^2O","^2P","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^3I","~$goog.dom.safe","^3C","^3F","~$goog.math.Coordinate","~$goog.math.Size","^2Q","^2N","~$goog.string.Unicode","~$goog.userAgent"]]],["^1C","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","~$goog.debug.Error","^3O"]]],["^1C","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^2O","^2P","^2N","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1C","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S"]]],["^2B","node_modules/object-assign/index.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","519ffd5a4c91b67302cc9947b794966d629860cd","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^2G"]]],["^1C","re_frame/db.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^R","^M"]]],["^1C","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S"]]],["^1C","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",[]]],["^1C","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^2O","^2Q"]]],["^1C","clojure/string.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^R","^2N","~$goog.string.StringBuffer"]]],["^2B","node_modules/react/cjs/react.production.min.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","6093d43b27c84de58b9ce55e3a930469339c9e54","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^2G","^3;"]]],["^1C","goog/debug/entrypointregistry.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^2P"]]],["^1C","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^3P","^3F","^2W","^2R"]]],["^1C","re_frame/interceptor.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^R","^X","^M","^P","^2Y"]]],["^1C","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S"]]],["^1C","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^2R"]]],["^1C","reagent/core.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^R","^?","~$reagent.impl.template","^3:","^2K","^33","^36","^2J","~$reagent.dom"]]],["^1C","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S"]]],["^1C","goog/math/coordinate.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","~$goog.math"]]],["^1C","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^2O","^2P","^3B","^42"]]],["^1C","goog/async/nexttick.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","~$goog.debug.entryPointRegistry","~$goog.dom","^3I","^3P","^3B","^3C","^2T","^2[","^30","^2W"]]],["^1C","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^2P","^3C","^3D","^3E","^3K","^3@","^2T","^2W","^2R"]]],["^1C","re_frame/utils.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^R","^X"]]],["^1C","reagent/dom.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^R","^A","^2K","^40","^33","^36"]]],["^1C","re_frame/fx.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^R","^U","^Y","^N","^M","^O","^Q","^X","^P"]]],["^1C","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S"]]],["^1C","cljs/core.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","~$goog.math.Long","~$goog.math.Integer","^2N","^2Q","^2O","~$goog.Uri","^3["]]],["^1C","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^2P","^3?","^2W","^2X"]]],["^1C","reagent/debug.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^R"]]],["^1C","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^2O","^2P","^3E","^2Q","^2W","^2X","^2R"]]],["^1C","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^32"]]],["^1C","goog/dom/browserfeature.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^3T"]]],["^2B","node_modules/scheduler/tracing.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","4a7a89de5eaa5548bfc85da9e5243b3c7e444a34","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^2G","~$module$node_modules$scheduler$cjs$scheduler_tracing_production_min","~$module$node_modules$scheduler$cjs$scheduler_tracing_development"]]],["^2B","node_modules/react-dom/cjs/react-dom.development.js"],["42468ad1f4c2050927ea1a8e0a075a1c29678378","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","83ba8373b41b94fbb7881e4cf06202757ea7bb11","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^2G","^?","^3;","^3<","~$module$node_modules$scheduler$tracing"]]],["^1C","clojure/set.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^R"]]],["^1C","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^2O","^2P","^2N"]]],["^1C","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^2P","^2X"]]],["^1C","re_frame/trace.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2C",["^ ","^2D",null,"^2E",["^F",[]],"^2F",["^S","^R","^M","^X","^3B"]]]]],"~:clj-info",["^ ","jar:file:/Users/bodyblock/.m2/repository/reagent/reagent/0.10.0/reagent-0.10.0.jar!/reagent/interop.clj",1608497490000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/source_map/base64.clj",1608497483000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/string.clj",1608791625000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/env.cljc",1608497483000,"jar:file:/Users/bodyblock/.m2/repository/reagent/reagent/0.10.0/reagent-0.10.0.jar!/reagent/debug.clj",1608497490000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/instant.clj",1608791625000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/pprint.clj",1608791625000,"jar:file:/Users/bodyblock/.m2/repository/reagent/reagent/0.10.0/reagent-0.10.0.jar!/reagent/core.clj",1608497490000,"jar:file:/Users/bodyblock/.m2/repository/net/cgrand/macrovich/0.2.1/macrovich-0.2.1.jar!/net/cgrand/macrovich.cljc",1608497490000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/inspect.clj",1608497496000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/core.cljc",1608497483000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/js_deps.cljc",1608497483000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/set.clj",1608791625000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/errors.clj",1608497496000,"jar:file:/Users/bodyblock/.m2/repository/binaryage/devtools/1.0.0/devtools-1.0.0.jar!/devtools/defaults.clj",1608791627000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/java/io.clj",1608791625000,"jar:file:/Users/bodyblock/.m2/repository/re-frame/re-frame/0.12.0/re-frame-0.12.0.jar!/re_frame/interop.clj",1608497490000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/default_data_readers.clj",1608497496000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj",1608791625000,"jar:file:/Users/bodyblock/.m2/repository/re-frame/re-frame/0.12.0/re-frame-0.12.0.jar!/re_frame/trace.cljc",1608497490000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/util.cljc",1608497483000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/analyzer.cljc",1608497483000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/source_map.clj",1608497483000,"jar:file:/Users/bodyblock/.m2/repository/reagent/reagent/0.10.0/reagent-0.10.0.jar!/reagent/ratom.clj",1608497490000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/source_map/base64_vlq.clj",1608497483000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/reader_types.clj",1608497496000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/edn.clj",1608791625000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader.clj",1608497496000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/tagged_literals.cljc",1608497483000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/compiler.cljc",1608497483000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1608497473000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/externs.clj",1608497483000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","re_frame/fx.cljc","^7",1,"^8",5,"^9",1,"^:",16],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"^D",null,"^E",["^F",[]],"^G","^H","^K",null,"^L",["^ ","^M","^M","^N","^N","^O","^O","^P","^P","^Q","^Q","^R","^R","^S","^S","^T","^U","^U","^U","^V","^P","^W","^O","^X","^X","^Y","^Y"],"^Z",["^F",["^["]],"~:shadow/js-access-global",["^F",["Error"]],"^10",["^ ","^11","^Y","^12","^N","^13","^M","^14","^Q","^15","^Q","^16","^Q","^17","^X"],"~:defs",["^ ","~$kind",["^ ","^G","^1O","^6","re_frame/fx.cljc","^7",15,"^8",1,"^9",15,"^:",10,"^5",["^ ","^6","re_frame/fx.cljc","^7",15,"^8",6,"^9",15,"^:",10],"~:tag","~$cljs.core/Keyword"],"~$reg-fx",["^ ","~:protocol-inline",null,"^5",["^ ","^6","re_frame/fx.cljc","^7",18,"^8",7,"^9",18,"^:",13,"~:arglists",["^1:",["~$quote",["^1:",[["~$id","~$handler"]]]]],"~:doc","Register the given effect `handler` for the given `id`.\n\n  `id` is keyword, often namespaced.\n  `handler` is a side-effecting function which takes a single argument and whose return\n  value is ignored.\n\n  Example Use\n  -----------\n\n  First, registration ... associate `:effect2` with a handler.\n\n  (reg-fx\n     :effect2\n     (fn [value]\n        ... do something side-effect-y))\n\n  Then, later, if an event handler were to return this effects map ...\n\n  {...\n   :effect2  [1 2]}\n\n   ... then the `handler` `fn` we registered previously, using `reg-fx`, will be\n   called with an argument of `[1 2]`."],"^G","^1Q","^6","re_frame/fx.cljc","^:",13,"~:method-params",["^1:",[["^5:","^5;"]]],"~:protocol-impl",null,"~:arglists-meta",["^1:",[null,null]],"^8",1,"~:variadic?",false,"^7",18,"~:ret-tag","~$any","^9",18,"~:max-fixed-arity",2,"~:fn-var",true,"^58",["^1:",["^59",["^1:",[["^5:","^5;"]]]]],"^5<","Register the given effect `handler` for the given `id`.\n\n  `id` is keyword, often namespaced.\n  `handler` is a side-effecting function which takes a single argument and whose return\n  value is ignored.\n\n  Example Use\n  -----------\n\n  First, registration ... associate `:effect2` with a handler.\n\n  (reg-fx\n     :effect2\n     (fn [value]\n        ... do something side-effect-y))\n\n  Then, later, if an event handler were to return this effects map ...\n\n  {...\n   :effect2  [1 2]}\n\n   ... then the `handler` `fn` we registered previously, using `reg-fx`, will be\n   called with an argument of `[1 2]`."],"~$do-fx",["^ ","^5",["^ ","^6","re_frame/fx.cljc","^7",47,"^8",6,"^9",47,"^:",11],"^G","^1S","^6","re_frame/fx.cljc","^:",11,"^8",1,"^7",47,"^9",47,"^54","~$cljs.core/IMap","^5<","An interceptor whose `:after` actions the contents of `:effects`. As a result,\n  this interceptor is Domino 3.\n\n  This interceptor is silently added (by reg-event-db etc) to the front of\n  interceptor chains for all events.\n\n  For each key in `:effects` (a map), it calls the registered `effects handler`\n  (see `reg-fx` for registration of effect handlers).\n\n  So, if `:effects` was:\n      {:dispatch  [:hello 42]\n       :db        {...}\n       :undo      \"set flag\"}\n\n  it will call the registered effect handlers for each of the map's keys:\n  `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n  value for that key - so in the example above the effect handler for :dispatch\n  will be given one arg `[:hello 42]`.\n\n  You cannot rely on the ordering in which effects are executed."]],"^18",["^ ","^P","^P","^V","^P","^R","^R"],"~:cljs.analyzer/constants",["^ ","^Z",["^F",["~:db","~:do-fx","~:start","~:dispatch-n","~:duration","~:deregister-event-handler","~:dispatch","~:after","~:event/do-fx","~:id","~:effects","~:error","~:end","~:ms","~:fx","~:op-type","~:dispatch-later"]],"~:order",["^5V","^5Q","^5I","^5O","^5W","^5P","^5J","^5L","^5T","^5R","^5S","^5X","^5U","^5N","^5K","^5M","^5H"]],"^1?",["^ ","^[",["^F",[]]],"^1@",["^ "],"^1A",["^S","^R","^U","^Y","^N","^M","^O","^Q","^X","^P"]],"^J","^H","~:ns-specs",["^ "],"~:ns-spec-vars",["^F",[]],"~:compiler-options",["^2A",[["^60","~:static-fns"],true,["^60","~:shadow-tweaks"],null,["^60","~:source-map-inline"],null,["^60","~:elide-asserts"],false,["^60","~:optimize-constants"],null,["^60","^1F"],null,["^60","~:external-config"],null,["^60","~:tooling-config"],null,["^60","~:emit-constants"],null,["^60","~:load-tests"],null,["^60","~:form-size-threshold"],null,["^60","~:data-readers"],null,["^60","~:infer-externs"],"~:auto",["^60","^1H"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^60","~:fn-invoke-direct"],null,["^60","~:source-map"],"/dev/null"]]]