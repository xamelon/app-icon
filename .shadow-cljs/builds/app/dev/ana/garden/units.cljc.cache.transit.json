["^ ","~:output",["^ ","~:js","goog.provide('garden.units');\ngarden.units.length_units = cljs.core.PersistentHashSet.createAsIfByAssoc([new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560),new cljs.core.Keyword(null,\"pt\",\"pt\",556460867),new cljs.core.Keyword(null,\"px\",\"px\",281329899),new cljs.core.Keyword(null,\"pc\",\"pc\",512913453),cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(\"%\"),new cljs.core.Keyword(null,\"cm\",\"cm\",540591536),new cljs.core.Keyword(null,\"in\",\"in\",-1531184865)]);\ngarden.units.angular_units = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081),null,new cljs.core.Keyword(null,\"turn\",\"turn\",75759344),null,new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012),null,new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229),null], null), null);\ngarden.units.time_units = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"s\",\"s\",1705939918),null,new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733),null], null), null);\ngarden.units.frequency_units = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466),null,new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916),null], null), null);\ngarden.units.resolution_units = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"dppx\",\"dppx\",1920508843),null,new cljs.core.Keyword(null,\"dpcm\",\"dpcm\",-1187601236),null,new cljs.core.Keyword(null,\"dpi\",\"dpi\",-986162832),null], null), null);\n/**\n * True if x is of type CSSUnit.\n */\ngarden.units.unit_QMARK_ = (function garden$units$unit_QMARK_(x){\nreturn (x instanceof garden.types.CSSUnit);\n});\ngarden.units.length_QMARK_ = (function garden$units$length_QMARK_(x){\nreturn ((garden.units.unit_QMARK_(x)) && (cljs.core.contains_QMARK_(garden.units.length_units,new cljs.core.Keyword(null,\"unit\",\"unit\",375175175).cljs$core$IFn$_invoke$arity$1(x))));\n});\ngarden.units.angle_QMARK_ = (function garden$units$angle_QMARK_(x){\nreturn ((garden.units.unit_QMARK_(x)) && (cljs.core.contains_QMARK_(garden.units.angular_units,new cljs.core.Keyword(null,\"unit\",\"unit\",375175175).cljs$core$IFn$_invoke$arity$1(x))));\n});\ngarden.units.time_QMARK_ = (function garden$units$time_QMARK_(x){\nreturn ((garden.units.unit_QMARK_(x)) && (cljs.core.contains_QMARK_(garden.units.time_units,new cljs.core.Keyword(null,\"unit\",\"unit\",375175175).cljs$core$IFn$_invoke$arity$1(x))));\n});\ngarden.units.frequency_QMARK_ = (function garden$units$frequency_QMARK_(x){\nreturn ((garden.units.unit_QMARK_(x)) && (cljs.core.contains_QMARK_(garden.units.frequency_units,new cljs.core.Keyword(null,\"unit\",\"unit\",375175175).cljs$core$IFn$_invoke$arity$1(x))));\n});\ngarden.units.resolution_QMARK_ = (function garden$units$resolution_QMARK_(x){\nreturn ((garden.units.unit_QMARK_(x)) && (cljs.core.contains_QMARK_(garden.units.resolution_units,new cljs.core.Keyword(null,\"unit\",\"unit\",375175175).cljs$core$IFn$_invoke$arity$1(x))));\n});\n/**\n * Map associating CSS unit types to their conversion values.\n */\ngarden.units.conversions = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560),new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466),new cljs.core.Keyword(null,\"pt\",\"pt\",556460867),new cljs.core.Keyword(null,\"px\",\"px\",281329899),new cljs.core.Keyword(null,\"rem\",\"rem\",-976484757),new cljs.core.Keyword(null,\"em\",\"em\",707813035),new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916),new cljs.core.Keyword(null,\"pc\",\"pc\",512913453),cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(\"%\"),new cljs.core.Keyword(null,\"s\",\"s\",1705939918),new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081),new cljs.core.Keyword(null,\"cm\",\"cm\",540591536),new cljs.core.Keyword(null,\"turn\",\"turn\",75759344),new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733),new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012),new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229),new cljs.core.Keyword(null,\"in\",\"in\",-1531184865)],[new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560),(1),new cljs.core.Keyword(null,\"pt\",\"pt\",556460867),2.83464567,new cljs.core.Keyword(null,\"px\",\"px\",281329899),3.7795275591], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466),(1)], null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"pt\",\"pt\",556460867),(1),new cljs.core.Keyword(null,\"px\",\"px\",281329899),1.3333333333], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"px\",\"px\",281329899),(1)], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"rem\",\"rem\",-976484757),(1)], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"em\",\"em\",707813035),(1)], null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916),(1),new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466),0.001], null),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560),4.23333333,new cljs.core.Keyword(null,\"pc\",\"pc\",512913453),(1),new cljs.core.Keyword(null,\"pt\",\"pt\",556460867),(12),new cljs.core.Keyword(null,\"px\",\"px\",281329899),(16)], null),cljs.core.PersistentArrayMap.createAsIfByAssoc([cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(\"%\"),(1)]),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733),(1000),new cljs.core.Keyword(null,\"s\",\"s\",1705939918),(1)], null),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081),(1),new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229),1.111111111,new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012),0.0174532925,new cljs.core.Keyword(null,\"turn\",\"turn\",75759344),0.002777778], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"cm\",\"cm\",540591536),(1),new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560),(10),new cljs.core.Keyword(null,\"pc\",\"pc\",512913453),2.36220473,new cljs.core.Keyword(null,\"pt\",\"pt\",556460867),28.3464567,new cljs.core.Keyword(null,\"px\",\"px\",281329899),37.795275591], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"turn\",\"turn\",75759344),(1)], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733),(1)], null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012),(1),new cljs.core.Keyword(null,\"turn\",\"turn\",75759344),0.159154943], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229),(1),new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012),63.661977237,new cljs.core.Keyword(null,\"turn\",\"turn\",75759344),0.0025], null),new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"cm\",\"cm\",540591536),2.54,new cljs.core.Keyword(null,\"in\",\"in\",-1531184865),(1),new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560),25.4,new cljs.core.Keyword(null,\"pc\",\"pc\",512913453),(6),new cljs.core.Keyword(null,\"pt\",\"pt\",556460867),(72),new cljs.core.Keyword(null,\"px\",\"px\",281329899),(96)], null)]);\n/**\n * True if unit is a key of convertable-units, false otherwise.\n */\ngarden.units.convertable_QMARK_ = (function garden$units$convertable_QMARK_(unit){\nreturn cljs.core.contains_QMARK_(garden.units.conversions,unit);\n});\n/**\n * Convert a Unit with :unit left to a Unit with :unit right if possible.\n */\ngarden.units.convert = (function garden$units$convert(p__68785,right){\nvar map__68794 = p__68785;\nvar map__68794__$1 = (((((!((map__68794 == null))))?(((((map__68794.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__68794.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__68794):map__68794);\nvar m = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__68794__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nvar left = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__68794__$1,new cljs.core.Keyword(null,\"unit\",\"unit\",375175175));\nif(cljs.core.every_QMARK_(garden.units.convertable_QMARK_,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [left,right], null))){\nvar v1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(garden.units.conversions,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [left,right], null));\nvar v2 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(garden.units.conversions,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [right,left], null));\nif(cljs.core.truth_(v1)){\nreturn (new garden.types.CSSUnit(right,(v1 * m),null,null,null));\n} else {\nif(cljs.core.truth_(v2)){\nreturn (new garden.types.CSSUnit(right,(m / v2),null,null,null));\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(garden.util.format.cljs$core$IFn$_invoke$arity$variadic(\"Can't convert %s to %s\",cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.name(left),cljs.core.name(right)], 0)),cljs.core.PersistentArrayMap.EMPTY);\n\n}\n}\n} else {\nvar x = cljs.core.first(cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(garden.units.convertable_QMARK_,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [left,right], null)));\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Inconvertible unit \",cljs.core.name(x)].join(''),cljs.core.PersistentArrayMap.EMPTY);\n}\n});\n/**\n * Regular expression for matching a CSS unit. The magnitude\n *           and unit are captured.\n */\ngarden.units.unit_re = /([+-]?\\d+(?:\\.?\\d+)?)(p[xtc]|in|[cm]m|%|r?em|ex|ch|v(?:[wh]|m(?:in|ax))|deg|g?rad|turn|m?s|k?Hz|dp(?:i|cm|px))/;\n/**\n * Read a `CSSUnit` object from the string `s`.\n */\ngarden.units.read_unit = (function garden$units$read_unit(s){\nvar temp__5720__auto__ = cljs.core.re_matches(garden.units.unit_re,s);\nif(cljs.core.truth_(temp__5720__auto__)){\nvar vec__68803 = temp__5720__auto__;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__68803,(0),null);\nvar magnitude = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__68803,(1),null);\nvar unit = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__68803,(2),null);\nvar unit__$1 = cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(unit);\nvar magnitude__$1 = (cljs.core.truth_(magnitude)?cljs.reader.read_string.cljs$core$IFn$_invoke$arity$1(magnitude):(0));\nreturn (new garden.types.CSSUnit(unit__$1,magnitude__$1,null,null,null));\n} else {\nreturn null;\n}\n});\n/**\n * Creates a function for verifying the given unit type.\n */\ngarden.units.make_unit_predicate = (function garden$units$make_unit_predicate(unit){\nreturn (function (x){\nreturn ((garden.units.unit_QMARK_(x)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"unit\",\"unit\",375175175).cljs$core$IFn$_invoke$arity$1(x),unit)));\n});\n});\n/**\n * Creates a function for creating and converting `CSSUnit`s for the\n *   given unit. If a number n is passed the function it will produce a\n *   new `CSSUnit` record with a the magnitude set to n. If a `CSSUnit`\n *   is passed the function will attempt to convert it.\n */\ngarden.units.make_unit_fn = (function garden$units$make_unit_fn(unit){\nreturn (function (x){\nif(typeof x === 'number'){\nreturn (new garden.types.CSSUnit(unit,x,null,null,null));\n} else {\nif(garden.units.unit_QMARK_(x)){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((unit.cljs$core$IFn$_invoke$arity$1 ? unit.cljs$core$IFn$_invoke$arity$1(x) : unit.call(null,x)),unit)){\nreturn x;\n} else {\nreturn garden.units.convert(x,unit);\n}\n} else {\nvar ex_message = garden.util.format.cljs$core$IFn$_invoke$arity$variadic(\"Unable to convert %s to %s\",cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([x,cljs.core.name(unit)], 0));\nvar ex_data = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"given\",\"given\",716253602),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"x\",\"x\",2099068185),x,new cljs.core.Keyword(null,\"unit\",\"unit\",375175175),unit], null)], null);\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(ex_message,ex_data);\n\n}\n}\n});\n});\n/**\n * Create a addition function for adding Units.\n */\ngarden.units.make_unit_adder = (function garden$units$make_unit_adder(unit){\nvar u = garden.units.make_unit_fn(unit);\nreturn (function() {\nvar garden$units$make_unit_adder_$_u_PLUS_ = null;\nvar garden$units$make_unit_adder_$_u_PLUS___0 = (function (){\nreturn u((0));\n});\nvar garden$units$make_unit_adder_$_u_PLUS___1 = (function (x){\nreturn u(x);\n});\nvar garden$units$make_unit_adder_$_u_PLUS___2 = (function (x,y){\nvar map__68830 = u(x);\nvar map__68830__$1 = (((((!((map__68830 == null))))?(((((map__68830.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__68830.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__68830):map__68830);\nvar m1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__68830__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nvar map__68831 = u(y);\nvar map__68831__$1 = (((((!((map__68831 == null))))?(((((map__68831.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__68831.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__68831):map__68831);\nvar m2 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__68831__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nreturn u((m1 + m2));\n});\nvar garden$units$make_unit_adder_$_u_PLUS___3 = (function() { \nvar G__69000__delegate = function (x,y,more){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(garden$units$make_unit_adder_$_u_PLUS_,garden$units$make_unit_adder_$_u_PLUS_.cljs$core$IFn$_invoke$arity$2(x,y),more);\n};\nvar G__69000 = function (x,y,var_args){\nvar more = null;\nif (arguments.length > 2) {\nvar G__69001__i = 0, G__69001__a = new Array(arguments.length -  2);\nwhile (G__69001__i < G__69001__a.length) {G__69001__a[G__69001__i] = arguments[G__69001__i + 2]; ++G__69001__i;}\n  more = new cljs.core.IndexedSeq(G__69001__a,0,null);\n} \nreturn G__69000__delegate.call(this,x,y,more);};\nG__69000.cljs$lang$maxFixedArity = 2;\nG__69000.cljs$lang$applyTo = (function (arglist__69002){\nvar x = cljs.core.first(arglist__69002);\narglist__69002 = cljs.core.next(arglist__69002);\nvar y = cljs.core.first(arglist__69002);\nvar more = cljs.core.rest(arglist__69002);\nreturn G__69000__delegate(x,y,more);\n});\nG__69000.cljs$core$IFn$_invoke$arity$variadic = G__69000__delegate;\nreturn G__69000;\n})()\n;\ngarden$units$make_unit_adder_$_u_PLUS_ = function(x,y,var_args){\nvar more = var_args;\nswitch(arguments.length){\ncase 0:\nreturn garden$units$make_unit_adder_$_u_PLUS___0.call(this);\ncase 1:\nreturn garden$units$make_unit_adder_$_u_PLUS___1.call(this,x);\ncase 2:\nreturn garden$units$make_unit_adder_$_u_PLUS___2.call(this,x,y);\ndefault:\nvar G__69003 = null;\nif (arguments.length > 2) {\nvar G__69004__i = 0, G__69004__a = new Array(arguments.length -  2);\nwhile (G__69004__i < G__69004__a.length) {G__69004__a[G__69004__i] = arguments[G__69004__i + 2]; ++G__69004__i;}\nG__69003 = new cljs.core.IndexedSeq(G__69004__a,0,null);\n}\nreturn garden$units$make_unit_adder_$_u_PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__69003);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ngarden$units$make_unit_adder_$_u_PLUS_.cljs$lang$maxFixedArity = 2;\ngarden$units$make_unit_adder_$_u_PLUS_.cljs$lang$applyTo = garden$units$make_unit_adder_$_u_PLUS___3.cljs$lang$applyTo;\ngarden$units$make_unit_adder_$_u_PLUS_.cljs$core$IFn$_invoke$arity$0 = garden$units$make_unit_adder_$_u_PLUS___0;\ngarden$units$make_unit_adder_$_u_PLUS_.cljs$core$IFn$_invoke$arity$1 = garden$units$make_unit_adder_$_u_PLUS___1;\ngarden$units$make_unit_adder_$_u_PLUS_.cljs$core$IFn$_invoke$arity$2 = garden$units$make_unit_adder_$_u_PLUS___2;\ngarden$units$make_unit_adder_$_u_PLUS_.cljs$core$IFn$_invoke$arity$variadic = garden$units$make_unit_adder_$_u_PLUS___3.cljs$core$IFn$_invoke$arity$variadic;\nreturn garden$units$make_unit_adder_$_u_PLUS_;\n})()\n});\n/**\n * Create a subtraction function for subtracting Units.\n */\ngarden.units.make_unit_subtractor = (function garden$units$make_unit_subtractor(unit){\nvar u = garden.units.make_unit_fn(unit);\nreturn (function() {\nvar garden$units$make_unit_subtractor_$_u_ = null;\nvar garden$units$make_unit_subtractor_$_u___1 = (function (x){\nreturn u((- x));\n});\nvar garden$units$make_unit_subtractor_$_u___2 = (function (x,y){\nvar map__68846 = u(x);\nvar map__68846__$1 = (((((!((map__68846 == null))))?(((((map__68846.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__68846.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__68846):map__68846);\nvar m1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__68846__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nvar map__68848 = u(y);\nvar map__68848__$1 = (((((!((map__68848 == null))))?(((((map__68848.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__68848.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__68848):map__68848);\nvar m2 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__68848__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nreturn u((m1 - m2));\n});\nvar garden$units$make_unit_subtractor_$_u___3 = (function() { \nvar G__69005__delegate = function (x,y,more){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(garden$units$make_unit_subtractor_$_u_,garden$units$make_unit_subtractor_$_u_.cljs$core$IFn$_invoke$arity$2(x,y),more);\n};\nvar G__69005 = function (x,y,var_args){\nvar more = null;\nif (arguments.length > 2) {\nvar G__69006__i = 0, G__69006__a = new Array(arguments.length -  2);\nwhile (G__69006__i < G__69006__a.length) {G__69006__a[G__69006__i] = arguments[G__69006__i + 2]; ++G__69006__i;}\n  more = new cljs.core.IndexedSeq(G__69006__a,0,null);\n} \nreturn G__69005__delegate.call(this,x,y,more);};\nG__69005.cljs$lang$maxFixedArity = 2;\nG__69005.cljs$lang$applyTo = (function (arglist__69011){\nvar x = cljs.core.first(arglist__69011);\narglist__69011 = cljs.core.next(arglist__69011);\nvar y = cljs.core.first(arglist__69011);\nvar more = cljs.core.rest(arglist__69011);\nreturn G__69005__delegate(x,y,more);\n});\nG__69005.cljs$core$IFn$_invoke$arity$variadic = G__69005__delegate;\nreturn G__69005;\n})()\n;\ngarden$units$make_unit_subtractor_$_u_ = function(x,y,var_args){\nvar more = var_args;\nswitch(arguments.length){\ncase 1:\nreturn garden$units$make_unit_subtractor_$_u___1.call(this,x);\ncase 2:\nreturn garden$units$make_unit_subtractor_$_u___2.call(this,x,y);\ndefault:\nvar G__69014 = null;\nif (arguments.length > 2) {\nvar G__69015__i = 0, G__69015__a = new Array(arguments.length -  2);\nwhile (G__69015__i < G__69015__a.length) {G__69015__a[G__69015__i] = arguments[G__69015__i + 2]; ++G__69015__i;}\nG__69014 = new cljs.core.IndexedSeq(G__69015__a,0,null);\n}\nreturn garden$units$make_unit_subtractor_$_u___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__69014);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ngarden$units$make_unit_subtractor_$_u_.cljs$lang$maxFixedArity = 2;\ngarden$units$make_unit_subtractor_$_u_.cljs$lang$applyTo = garden$units$make_unit_subtractor_$_u___3.cljs$lang$applyTo;\ngarden$units$make_unit_subtractor_$_u_.cljs$core$IFn$_invoke$arity$1 = garden$units$make_unit_subtractor_$_u___1;\ngarden$units$make_unit_subtractor_$_u_.cljs$core$IFn$_invoke$arity$2 = garden$units$make_unit_subtractor_$_u___2;\ngarden$units$make_unit_subtractor_$_u_.cljs$core$IFn$_invoke$arity$variadic = garden$units$make_unit_subtractor_$_u___3.cljs$core$IFn$_invoke$arity$variadic;\nreturn garden$units$make_unit_subtractor_$_u_;\n})()\n});\n/**\n * Create a multiplication function for multiplying Units.\n */\ngarden.units.make_unit_multiplier = (function garden$units$make_unit_multiplier(unit){\nvar u = garden.units.make_unit_fn(unit);\nvar op = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(unit,new cljs.core.Keyword(null,\"%\",\"%\",1704198600)))?(function garden$units$make_unit_multiplier_$_percent_STAR_(x,y){\nreturn ((x * y) / (100));\n}):cljs.core._STAR_);\nreturn (function() {\nvar garden$units$make_unit_multiplier_$_u_STAR_ = null;\nvar garden$units$make_unit_multiplier_$_u_STAR___0 = (function (){\nreturn u((1));\n});\nvar garden$units$make_unit_multiplier_$_u_STAR___1 = (function (x){\nreturn u(x);\n});\nvar garden$units$make_unit_multiplier_$_u_STAR___2 = (function (x,y){\nvar map__68861 = u(x);\nvar map__68861__$1 = (((((!((map__68861 == null))))?(((((map__68861.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__68861.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__68861):map__68861);\nvar m1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__68861__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nvar map__68862 = u(y);\nvar map__68862__$1 = (((((!((map__68862 == null))))?(((((map__68862.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__68862.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__68862):map__68862);\nvar m2 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__68862__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nreturn u((op.cljs$core$IFn$_invoke$arity$2 ? op.cljs$core$IFn$_invoke$arity$2(m1,m2) : op.call(null,m1,m2)));\n});\nvar garden$units$make_unit_multiplier_$_u_STAR___3 = (function() { \nvar G__69035__delegate = function (x,y,more){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(garden$units$make_unit_multiplier_$_u_STAR_,garden$units$make_unit_multiplier_$_u_STAR_.cljs$core$IFn$_invoke$arity$2(x,y),more);\n};\nvar G__69035 = function (x,y,var_args){\nvar more = null;\nif (arguments.length > 2) {\nvar G__69037__i = 0, G__69037__a = new Array(arguments.length -  2);\nwhile (G__69037__i < G__69037__a.length) {G__69037__a[G__69037__i] = arguments[G__69037__i + 2]; ++G__69037__i;}\n  more = new cljs.core.IndexedSeq(G__69037__a,0,null);\n} \nreturn G__69035__delegate.call(this,x,y,more);};\nG__69035.cljs$lang$maxFixedArity = 2;\nG__69035.cljs$lang$applyTo = (function (arglist__69038){\nvar x = cljs.core.first(arglist__69038);\narglist__69038 = cljs.core.next(arglist__69038);\nvar y = cljs.core.first(arglist__69038);\nvar more = cljs.core.rest(arglist__69038);\nreturn G__69035__delegate(x,y,more);\n});\nG__69035.cljs$core$IFn$_invoke$arity$variadic = G__69035__delegate;\nreturn G__69035;\n})()\n;\ngarden$units$make_unit_multiplier_$_u_STAR_ = function(x,y,var_args){\nvar more = var_args;\nswitch(arguments.length){\ncase 0:\nreturn garden$units$make_unit_multiplier_$_u_STAR___0.call(this);\ncase 1:\nreturn garden$units$make_unit_multiplier_$_u_STAR___1.call(this,x);\ncase 2:\nreturn garden$units$make_unit_multiplier_$_u_STAR___2.call(this,x,y);\ndefault:\nvar G__69047 = null;\nif (arguments.length > 2) {\nvar G__69048__i = 0, G__69048__a = new Array(arguments.length -  2);\nwhile (G__69048__i < G__69048__a.length) {G__69048__a[G__69048__i] = arguments[G__69048__i + 2]; ++G__69048__i;}\nG__69047 = new cljs.core.IndexedSeq(G__69048__a,0,null);\n}\nreturn garden$units$make_unit_multiplier_$_u_STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__69047);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ngarden$units$make_unit_multiplier_$_u_STAR_.cljs$lang$maxFixedArity = 2;\ngarden$units$make_unit_multiplier_$_u_STAR_.cljs$lang$applyTo = garden$units$make_unit_multiplier_$_u_STAR___3.cljs$lang$applyTo;\ngarden$units$make_unit_multiplier_$_u_STAR_.cljs$core$IFn$_invoke$arity$0 = garden$units$make_unit_multiplier_$_u_STAR___0;\ngarden$units$make_unit_multiplier_$_u_STAR_.cljs$core$IFn$_invoke$arity$1 = garden$units$make_unit_multiplier_$_u_STAR___1;\ngarden$units$make_unit_multiplier_$_u_STAR_.cljs$core$IFn$_invoke$arity$2 = garden$units$make_unit_multiplier_$_u_STAR___2;\ngarden$units$make_unit_multiplier_$_u_STAR_.cljs$core$IFn$_invoke$arity$variadic = garden$units$make_unit_multiplier_$_u_STAR___3.cljs$core$IFn$_invoke$arity$variadic;\nreturn garden$units$make_unit_multiplier_$_u_STAR_;\n})()\n});\n/**\n * Create a division function for dividing Units.\n */\ngarden.units.make_unit_divider = (function garden$units$make_unit_divider(unit){\nvar u = garden.units.make_unit_fn(unit);\nvar op = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(unit,new cljs.core.Keyword(null,\"%\",\"%\",1704198600)))?(function garden$units$make_unit_divider_$_percent_div(x,y){\nreturn ((100) * (x / y));\n}):cljs.core._SLASH_);\nreturn (function() {\nvar garden$units$make_unit_divider_$_ud = null;\nvar garden$units$make_unit_divider_$_ud__1 = (function (x){\nreturn u(((1) / x));\n});\nvar garden$units$make_unit_divider_$_ud__2 = (function (x,y){\nvar map__68867 = u(x);\nvar map__68867__$1 = (((((!((map__68867 == null))))?(((((map__68867.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__68867.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__68867):map__68867);\nvar m1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__68867__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nvar map__68868 = u(y);\nvar map__68868__$1 = (((((!((map__68868 == null))))?(((((map__68868.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__68868.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__68868):map__68868);\nvar m2 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__68868__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nreturn u((op.cljs$core$IFn$_invoke$arity$2 ? op.cljs$core$IFn$_invoke$arity$2(m1,m2) : op.call(null,m1,m2)));\n});\nvar garden$units$make_unit_divider_$_ud__3 = (function() { \nvar G__69074__delegate = function (x,y,more){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(garden$units$make_unit_divider_$_ud,garden$units$make_unit_divider_$_ud.cljs$core$IFn$_invoke$arity$2(x,y),more);\n};\nvar G__69074 = function (x,y,var_args){\nvar more = null;\nif (arguments.length > 2) {\nvar G__69079__i = 0, G__69079__a = new Array(arguments.length -  2);\nwhile (G__69079__i < G__69079__a.length) {G__69079__a[G__69079__i] = arguments[G__69079__i + 2]; ++G__69079__i;}\n  more = new cljs.core.IndexedSeq(G__69079__a,0,null);\n} \nreturn G__69074__delegate.call(this,x,y,more);};\nG__69074.cljs$lang$maxFixedArity = 2;\nG__69074.cljs$lang$applyTo = (function (arglist__69084){\nvar x = cljs.core.first(arglist__69084);\narglist__69084 = cljs.core.next(arglist__69084);\nvar y = cljs.core.first(arglist__69084);\nvar more = cljs.core.rest(arglist__69084);\nreturn G__69074__delegate(x,y,more);\n});\nG__69074.cljs$core$IFn$_invoke$arity$variadic = G__69074__delegate;\nreturn G__69074;\n})()\n;\ngarden$units$make_unit_divider_$_ud = function(x,y,var_args){\nvar more = var_args;\nswitch(arguments.length){\ncase 1:\nreturn garden$units$make_unit_divider_$_ud__1.call(this,x);\ncase 2:\nreturn garden$units$make_unit_divider_$_ud__2.call(this,x,y);\ndefault:\nvar G__69092 = null;\nif (arguments.length > 2) {\nvar G__69093__i = 0, G__69093__a = new Array(arguments.length -  2);\nwhile (G__69093__i < G__69093__a.length) {G__69093__a[G__69093__i] = arguments[G__69093__i + 2]; ++G__69093__i;}\nG__69092 = new cljs.core.IndexedSeq(G__69093__a,0,null);\n}\nreturn garden$units$make_unit_divider_$_ud__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__69092);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ngarden$units$make_unit_divider_$_ud.cljs$lang$maxFixedArity = 2;\ngarden$units$make_unit_divider_$_ud.cljs$lang$applyTo = garden$units$make_unit_divider_$_ud__3.cljs$lang$applyTo;\ngarden$units$make_unit_divider_$_ud.cljs$core$IFn$_invoke$arity$1 = garden$units$make_unit_divider_$_ud__1;\ngarden$units$make_unit_divider_$_ud.cljs$core$IFn$_invoke$arity$2 = garden$units$make_unit_divider_$_ud__2;\ngarden$units$make_unit_divider_$_ud.cljs$core$IFn$_invoke$arity$variadic = garden$units$make_unit_divider_$_ud__3.cljs$core$IFn$_invoke$arity$variadic;\nreturn garden$units$make_unit_divider_$_ud;\n})()\n});\ngarden.units.cm = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"cm\",\"cm\",540591536));\n\ngarden.units.cm_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"cm\",\"cm\",540591536));\n\ngarden.units.cm_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"cm\",\"cm\",540591536));\n\ngarden.units.cm_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"cm\",\"cm\",540591536));\n\ngarden.units.cm_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"cm\",\"cm\",540591536));\n\ngarden.units.cm_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"cm\",\"cm\",540591536));\ngarden.units.mm = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560));\n\ngarden.units.mm_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560));\n\ngarden.units.mm_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560));\n\ngarden.units.mm_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560));\n\ngarden.units.mm_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560));\n\ngarden.units.mm_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560));\ngarden.units.in$ = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"in\",\"in\",-1531184865));\n\ngarden.units.in_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"in\",\"in\",-1531184865));\n\ngarden.units.in_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"in\",\"in\",-1531184865));\n\ngarden.units.in_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"in\",\"in\",-1531184865));\n\ngarden.units.in_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"in\",\"in\",-1531184865));\n\ngarden.units.in_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"in\",\"in\",-1531184865));\ngarden.units.px = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"px\",\"px\",281329899));\n\ngarden.units.px_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"px\",\"px\",281329899));\n\ngarden.units.px_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"px\",\"px\",281329899));\n\ngarden.units.px_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"px\",\"px\",281329899));\n\ngarden.units.px_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"px\",\"px\",281329899));\n\ngarden.units.px_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"px\",\"px\",281329899));\ngarden.units.pt = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"pt\",\"pt\",556460867));\n\ngarden.units.pt_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"pt\",\"pt\",556460867));\n\ngarden.units.pt_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"pt\",\"pt\",556460867));\n\ngarden.units.pt_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"pt\",\"pt\",556460867));\n\ngarden.units.pt_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"pt\",\"pt\",556460867));\n\ngarden.units.pt_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"pt\",\"pt\",556460867));\ngarden.units.pc = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"pc\",\"pc\",512913453));\n\ngarden.units.pc_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"pc\",\"pc\",512913453));\n\ngarden.units.pc_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"pc\",\"pc\",512913453));\n\ngarden.units.pc_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"pc\",\"pc\",512913453));\n\ngarden.units.pc_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"pc\",\"pc\",512913453));\n\ngarden.units.pc_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"pc\",\"pc\",512913453));\ngarden.units.percent = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"%\",\"%\",1704198600));\n\ngarden.units.percent_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"%\",\"%\",1704198600));\n\ngarden.units.percent_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"%\",\"%\",1704198600));\n\ngarden.units.percent_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"%\",\"%\",1704198600));\n\ngarden.units.percent_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"%\",\"%\",1704198600));\n\ngarden.units.percent_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"%\",\"%\",1704198600));\ngarden.units.em = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"em\",\"em\",707813035));\n\ngarden.units.em_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"em\",\"em\",707813035));\n\ngarden.units.em_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"em\",\"em\",707813035));\n\ngarden.units.em_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"em\",\"em\",707813035));\n\ngarden.units.em_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"em\",\"em\",707813035));\n\ngarden.units.em_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"em\",\"em\",707813035));\ngarden.units.ex = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"ex\",\"ex\",-1413771341));\n\ngarden.units.ex_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"ex\",\"ex\",-1413771341));\n\ngarden.units.ex_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"ex\",\"ex\",-1413771341));\n\ngarden.units.ex_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"ex\",\"ex\",-1413771341));\n\ngarden.units.ex_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"ex\",\"ex\",-1413771341));\n\ngarden.units.ex_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"ex\",\"ex\",-1413771341));\ngarden.units.ch = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"ch\",\"ch\",-554717905));\n\ngarden.units.ch_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"ch\",\"ch\",-554717905));\n\ngarden.units.ch_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"ch\",\"ch\",-554717905));\n\ngarden.units.ch_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"ch\",\"ch\",-554717905));\n\ngarden.units.ch_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"ch\",\"ch\",-554717905));\n\ngarden.units.ch_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"ch\",\"ch\",-554717905));\ngarden.units.rem = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"rem\",\"rem\",-976484757));\n\ngarden.units.rem_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"rem\",\"rem\",-976484757));\n\ngarden.units.rem_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"rem\",\"rem\",-976484757));\n\ngarden.units.rem_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"rem\",\"rem\",-976484757));\n\ngarden.units.rem_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"rem\",\"rem\",-976484757));\n\ngarden.units.rem_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"rem\",\"rem\",-976484757));\ngarden.units.vw = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"vw\",\"vw\",1941049135));\n\ngarden.units.vw_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"vw\",\"vw\",1941049135));\n\ngarden.units.vw_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"vw\",\"vw\",1941049135));\n\ngarden.units.vw_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"vw\",\"vw\",1941049135));\n\ngarden.units.vw_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"vw\",\"vw\",1941049135));\n\ngarden.units.vw_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"vw\",\"vw\",1941049135));\ngarden.units.vh = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"vh\",\"vh\",79552846));\n\ngarden.units.vh_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"vh\",\"vh\",79552846));\n\ngarden.units.vh_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"vh\",\"vh\",79552846));\n\ngarden.units.vh_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"vh\",\"vh\",79552846));\n\ngarden.units.vh_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"vh\",\"vh\",79552846));\n\ngarden.units.vh_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"vh\",\"vh\",79552846));\ngarden.units.vmin = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"vmin\",\"vmin\",446546816));\n\ngarden.units.vmin_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"vmin\",\"vmin\",446546816));\n\ngarden.units.vmin_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"vmin\",\"vmin\",446546816));\n\ngarden.units.vmin_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"vmin\",\"vmin\",446546816));\n\ngarden.units.vmin_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"vmin\",\"vmin\",446546816));\n\ngarden.units.vmin_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"vmin\",\"vmin\",446546816));\ngarden.units.vmax = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"vmax\",\"vmax\",-1435213544));\n\ngarden.units.vmax_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"vmax\",\"vmax\",-1435213544));\n\ngarden.units.vmax_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"vmax\",\"vmax\",-1435213544));\n\ngarden.units.vmax_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"vmax\",\"vmax\",-1435213544));\n\ngarden.units.vmax_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"vmax\",\"vmax\",-1435213544));\n\ngarden.units.vmax_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"vmax\",\"vmax\",-1435213544));\ngarden.units.deg = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081));\n\ngarden.units.deg_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081));\n\ngarden.units.deg_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081));\n\ngarden.units.deg_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081));\n\ngarden.units.deg_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081));\n\ngarden.units.deg_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081));\ngarden.units.grad = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229));\n\ngarden.units.grad_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229));\n\ngarden.units.grad_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229));\n\ngarden.units.grad_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229));\n\ngarden.units.grad_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229));\n\ngarden.units.grad_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229));\ngarden.units.rad = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012));\n\ngarden.units.rad_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012));\n\ngarden.units.rad_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012));\n\ngarden.units.rad_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012));\n\ngarden.units.rad_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012));\n\ngarden.units.rad_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012));\ngarden.units.turn = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"turn\",\"turn\",75759344));\n\ngarden.units.turn_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"turn\",\"turn\",75759344));\n\ngarden.units.turn_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"turn\",\"turn\",75759344));\n\ngarden.units.turn_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"turn\",\"turn\",75759344));\n\ngarden.units.turn_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"turn\",\"turn\",75759344));\n\ngarden.units.turn_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"turn\",\"turn\",75759344));\ngarden.units.s = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"s\",\"s\",1705939918));\n\ngarden.units.s_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"s\",\"s\",1705939918));\n\ngarden.units.s_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"s\",\"s\",1705939918));\n\ngarden.units.s_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"s\",\"s\",1705939918));\n\ngarden.units.s_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"s\",\"s\",1705939918));\n\ngarden.units.s_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"s\",\"s\",1705939918));\ngarden.units.ms = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\n\ngarden.units.ms_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\n\ngarden.units.ms_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\n\ngarden.units.ms_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\n\ngarden.units.ms_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\n\ngarden.units.ms_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\ngarden.units.Hz = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916));\n\ngarden.units.Hz_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916));\n\ngarden.units.Hz_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916));\n\ngarden.units.Hz_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916));\n\ngarden.units.Hz_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916));\n\ngarden.units.Hz_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916));\ngarden.units.kHz = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466));\n\ngarden.units.kHz_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466));\n\ngarden.units.kHz_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466));\n\ngarden.units.kHz_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466));\n\ngarden.units.kHz_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466));\n\ngarden.units.kHz_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466));\ngarden.units.dpi = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"dpi\",\"dpi\",-986162832));\n\ngarden.units.dpi_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"dpi\",\"dpi\",-986162832));\n\ngarden.units.dpi_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"dpi\",\"dpi\",-986162832));\n\ngarden.units.dpi_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"dpi\",\"dpi\",-986162832));\n\ngarden.units.dpi_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"dpi\",\"dpi\",-986162832));\n\ngarden.units.dpi_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"dpi\",\"dpi\",-986162832));\ngarden.units.dpcm = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"dpcm\",\"dpcm\",-1187601236));\n\ngarden.units.dpcm_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"dpcm\",\"dpcm\",-1187601236));\n\ngarden.units.dpcm_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"dpcm\",\"dpcm\",-1187601236));\n\ngarden.units.dpcm_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"dpcm\",\"dpcm\",-1187601236));\n\ngarden.units.dpcm_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"dpcm\",\"dpcm\",-1187601236));\n\ngarden.units.dpcm_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"dpcm\",\"dpcm\",-1187601236));\ngarden.units.dppx = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"dppx\",\"dppx\",1920508843));\n\ngarden.units.dppx_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"dppx\",\"dppx\",1920508843));\n\ngarden.units.dppx_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"dppx\",\"dppx\",1920508843));\n\ngarden.units.dppx_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"dppx\",\"dppx\",1920508843));\n\ngarden.units.dppx_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"dppx\",\"dppx\",1920508843));\n\ngarden.units.dppx_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"dppx\",\"dppx\",1920508843));\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","Functions and macros for working with CSS units.","~:file","garden/units.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",17],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.pprint","~$cljs.pprint"],"~:use-macros",["^ ","~$defunit","~$garden.units"],"~:excludes",["~#set",["~$rem"]],"~:macros",["^ ","^F",["^ ","~:arglists",["~#list",[["~$name"],["^N","~$unit"]]],"^6","Create a suite of functions for unit creation, conversion,\n  validation, and arithmetic.","^8",260,"^9",4,"^7","garden/units.cljc","~:name","~$garden.units/defunit","~:ns","^G","~:macro",true]],"^P","^G","~:op","^R","~:imports",null,"~:requires",["^ ","~$cljs.reader","^W","~$garden.types","^X","~$types","^X","~$garden.util","^Z","~$util","^Z","~$cljs.core","^10","~$goog","^11"],"~:seen",["^I",["~:require","~:require-macros"]],"~:uses",["^ ","~$read-string","^W","~$CSSUnit","^X"],"^14",["^ ","^G","^G","^10","^10","^W","^W"],"~:form",["^M",["~$ns","^G","Functions and macros for working with CSS units.",["^M",["~:refer-clojure","~:exclude",["^J"]]],["^M",["^13",["^W","~:refer",["^16"]],["^X","~:as","^Y","^1<",["^17"]],["^Z","^1=","^["]]],["^M",["^14",["^G","^1<",["^F"]]]]]],"~:flags",["^ ","^13",["^I",[]],"^14",["^I",[]]],"~:js-deps",["^ "],"~:deps",["^11","^10","^W","^X","^Z"]],"^R","^G","~:resource-id",["~:shadow.build.classpath/resource","garden/units.cljc"],"~:compiled-at",1610009132527,"~:resource-name","garden/units.cljc","~:warnings",[],"~:source","(ns garden.units\n  \"Functions and macros for working with CSS units.\"\n  (:refer-clojure :exclude [rem])\n  #?@(:clj\n     [(:require\n       [garden.types :as types]\n       [garden.util :as util])\n      (:import\n       [garden.types CSSUnit])])\n  #?@(:cljs\n      [(:require\n        [cljs.reader :refer [read-string]]\n        [garden.types :as types :refer [CSSUnit]]\n        [garden.util :as util])\n       (:require-macros\n        [garden.units :refer [defunit]])]))\n\n;;;; ## Unit families\n\n(def length-units\n  #{:in :cm :pc :mm :pt :px (keyword \"%\")})\n\n(def angular-units\n  #{:deg :grad :rad :turn})\n\n(def time-units\n  #{:s :ms})\n\n(def frequency-units\n  #{:Hz :kHz})\n\n(def resolution-units\n  #{:dpi :dpcm :dppx})\n\n;;;; ## Unit predicates\n\n(defn unit?\n  \"True if x is of type CSSUnit.\"\n  [x]\n  (instance? CSSUnit x))\n\n(defn length?\n  [x]\n  (and (unit? x)\n       (contains? length-units (:unit x))))\n\n(defn angle?\n  [x]\n  (and (unit? x)\n       (contains? angular-units (:unit x))))\n\n(defn time?\n  [x]\n  (and (unit? x)\n       (contains? time-units (:unit x))))\n\n(defn frequency?\n  [x]\n  (and (unit? x)\n       (contains? frequency-units (:unit x))))\n\n(defn resolution?\n  [x]\n  (and (unit? x)\n       (contains? resolution-units (:unit x))))\n\n;;;; ## Unit conversion\n\n(def ^{:private true\n       :doc \"Map associating CSS unit types to their conversion values.\"}\n  conversions\n  {;; Absolute units\n   :cm {:cm 1\n        :mm 10\n        :pc 2.36220473\n        :pt 28.3464567\n        :px 37.795275591}\n   :in {:cm 2.54\n        :in 1\n        :mm 25.4\n        :pc 6\n        :pt 72\n        :px 96}\n   :mm {:mm 1\n        :pt 2.83464567\n        :px 3.7795275591}\n   :pc {:mm 4.23333333\n        :pc 1\n        :pt 12\n        :px 16}\n   :pt {:pt 1\n        :px 1.3333333333}\n   :px {:px 1}\n   (keyword \"%\") {(keyword \"%\") 1}\n\n   ;; Relative untis\n   :em {:em 1}\n   :rem {:rem 1}\n\n   ;; Angular units\n   :deg {:deg 1\n         :grad 1.111111111\n         :rad 0.0174532925\n         :turn 0.002777778}\n   :grad {:grad 1\n          :rad 63.661977237\n          :turn 0.0025}\n   :rad {:rad 1\n         :turn 0.159154943}\n   :turn {:turn 1}\n\n   ;; Time units\n   :s {:ms 1000\n       :s 1}\n   :ms {:ms 1}\n\n   ;; Frequency units\n   :Hz {:Hz 1\n        :kHz 0.001}\n   :kHz {:kHz 1}})\n\n(defn- convertable?\n  \"True if unit is a key of convertable-units, false otherwise.\"\n  [unit]\n  (contains? conversions unit))\n\n(defn- convert\n  \"Convert a Unit with :unit left to a Unit with :unit right if possible.\"\n  [{m :magnitude left :unit} right]\n  (if (every? convertable? [left right])\n    (let [v1 (get-in conversions [left right])\n          v2 (get-in conversions [right left])]\n      (cond\n        v1\n        (CSSUnit. right (* v1 m))\n\n        v2\n        (CSSUnit. right (/ m v2))\n\n       ;; Both units are convertible but no conversion between them exists.\n       :else\n       (throw\n        (ex-info\n         (util/format \"Can't convert %s to %s\" (name left) (name right)) {}))))\n    ;; Display the inconvertible unit.\n    (let [x (first (drop-while convertable? [left right]))]\n      (throw (ex-info (str \"Inconvertible unit \" (name x)) {})))))\n\n;;;; ## Unit helpers\n\n(def ^{:doc \"Regular expression for matching a CSS unit. The magnitude\n             and unit are captured.\"\n       :private true}\n  unit-re\n  #\"([+-]?\\d+(?:\\.?\\d+)?)(p[xtc]|in|[cm]m|%|r?em|ex|ch|v(?:[wh]|m(?:in|ax))|deg|g?rad|turn|m?s|k?Hz|dp(?:i|cm|px))\")\n\n(defn read-unit\n  \"Read a `CSSUnit` object from the string `s`.\"\n  [s]\n  (when-let [[_ magnitude unit] (re-matches unit-re s)]\n    (let [unit (keyword unit)\n          magnitude (if magnitude (read-string magnitude) 0)]\n      (CSSUnit. unit magnitude))))\n\n(defn make-unit-predicate\n  \"Creates a function for verifying the given unit type.\"\n  [unit]\n  (fn [x] (and (unit? x) (= (:unit x) unit))))\n\n(defn make-unit-fn\n  \"Creates a function for creating and converting `CSSUnit`s for the\n  given unit. If a number n is passed the function it will produce a\n  new `CSSUnit` record with a the magnitude set to n. If a `CSSUnit`\n  is passed the function will attempt to convert it.\"\n  [unit]\n  (fn [x]\n    (cond\n      (number? x)\n      (CSSUnit. unit x)\n\n      (unit? x)\n      (if (and (= (unit x) unit))\n        x\n        (convert x unit))\n\n      :else\n      (let [ex-message (util/format \"Unable to convert %s to %s\"\n                                    x\n                                    (name unit))\n            ex-data {:given {:x x\n                             :unit unit}}]\n        (throw\n         (ex-info ex-message ex-data))))))\n\n(defn make-unit-adder\n  \"Create a addition function for adding Units.\"\n  [unit]\n  (let [u (make-unit-fn unit)]\n    (fn u+\n      ([] (u 0))\n      ([x] (u x))\n      ([x y]\n         (let [{m1 :magnitude} (u x)\n               {m2 :magnitude} (u y)]\n           (u (+ m1 m2))))\n      ([x y & more]\n         (reduce u+ (u+ x y) more)))))\n\n(defn make-unit-subtractor\n  \"Create a subtraction function for subtracting Units.\"\n  [unit]\n  (let [u (make-unit-fn unit)]\n    (fn u-\n      ([x] (u (- x)))\n      ([x y]\n         (let [{m1 :magnitude} (u x)\n               {m2 :magnitude} (u y)]\n           (u (- m1 m2))))\n      ([x y & more]\n         (reduce u- (u- x y) more)))))\n\n(defn make-unit-multiplier\n  \"Create a multiplication function for multiplying Units.\"\n  [unit]\n  (let [u  (make-unit-fn unit)\n        op (if (= unit :%)\n            (fn percent*\n              [x y]\n              (/ (* x y) 100))\n            *)]\n    (fn u*\n      ([] (u 1))\n      ([x] (u x))\n      ([x y]\n         (let [{m1 :magnitude} (u x)\n               {m2 :magnitude} (u y)]\n           (u (op m1 m2))))\n      ([x y & more]\n         (reduce u* (u* x y) more)))))\n\n(defn make-unit-divider\n  \"Create a division function for dividing Units.\"\n  [unit]\n  (let [u (make-unit-fn unit)\n        op (if (= unit :%)\n            (fn percent-div\n              [x y]\n              (* 100 (/ x y)))\n             /)]\n    (fn ud\n      ([x] (u (/ 1 x)))\n      ([x y]\n         (let [{m1 :magnitude} (u x)\n               {m2 :magnitude} (u y)]\n           (u (op m1 m2))))\n      ([x y & more]\n         (reduce ud (ud x y) more)))))\n\n#?(:clj\n   (defmacro defunit\n     \"Create a suite of functions for unit creation, conversion,\n  validation, and arithmetic.\"\n     ([name]\n      `(defunit ~name ~name))\n     ([name unit]\n      (let [k (keyword unit)\n            append #(symbol (str name %))]\n        `(do\n           (def ~name (make-unit-fn ~k))\n           (def ~(append \\?) (make-unit-predicate ~k))\n           (def ~(append \\+) (make-unit-adder ~k))\n           (def ~(append \\-) (make-unit-subtractor ~k))\n           (def ~(append \\*) (make-unit-multiplier ~k))\n           (def ~(append \"-div\") (make-unit-divider ~k)))))))\n\n(comment\n  ;; This:\n  (defunit px)\n  ;; Is equivalent to:\n  (def px  (make-unit-fn :px))\n  (def px? (make-unit-predicate :px))\n  (def px+ (make-unit-adder :px))\n  (def px- (make-unit-subtractor :px))\n  (def px* (make-unit-multiplier :px))\n  (def px-div (make-unit-divider :px)))\n\n;; # Predefined units\n\n;; Absolute units\n\n(defunit cm)\n(defunit mm)\n(defunit in)\n(defunit px)\n(defunit pt)\n(defunit pc)\n(defunit percent \"%\")\n\n;; Font-relative units\n\n(defunit em)\n(defunit ex)\n(defunit ch)\n(defunit rem)\n\n;; Viewport-percentage lengths\n\n(defunit vw)\n(defunit vh)\n(defunit vmin)\n(defunit vmax)\n\n;; Angles\n\n(defunit deg)\n(defunit grad)\n(defunit rad)\n(defunit turn)\n\n;; Times\n\n(defunit s)\n(defunit ms)\n\n;; Frequencies\n\n(defunit Hz)\n(defunit kHz)\n\n;; Resolutions\n\n(defunit dpi)\n(defunit dpcm)\n(defunit dppx)\n","~:reader-features",["^I",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["garden.units/length-units","cljs.core.keyword","garden.units/angular-units","garden.units/time-units","garden.units/frequency-units","garden.units/resolution-units","garden.units/unit?","x","garden.types/CSSUnit","garden.units/length?","cljs.core/contains?","garden.units/angle?","garden.units/time?","garden.units/frequency?","garden.units/resolution?","garden.units/conversions","garden.units/convertable?","unit","p__68785","map__68794","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","garden.units/convert","m","left","right","cljs.core/every?","v1","cljs.core.get_in","v2","cljs.core.ex_info","garden.util.format","cljs.core/name","cljs.core/first","cljs.core.drop_while","garden.units/unit-re","garden.units/read-unit","s","temp__5720__auto__","vec__68803","cljs.core.nth","_","magnitude","cljs.core/re-matches","cljs.reader.read_string","garden.units/make-unit-predicate","cljs.core._EQ_","garden.units/make-unit-fn","ex-message","ex-data","garden.units/make-unit-adder","u","y","map__68830","map__68831","m1","m2","more","cljs.core.reduce","u+","garden$units$make_unit_adder_$_u_PLUS_","garden.units/make-unit-subtractor","map__68846","map__68848","u-","garden$units$make_unit_subtractor_$_u_","garden.units/make-unit-multiplier","op","cljs.core/*","map__68861","map__68862","u*","garden$units$make_unit_multiplier_$_u_STAR_","garden.units/make-unit-divider","cljs.core//","map__68867","map__68868","ud","garden$units$make_unit_divider_$_ud","garden.units/cm?","garden.units/cm+","garden.units/cm-","garden.units/cm*","garden.units/cm-div","garden.units/cm","garden.units/mm?","garden.units/mm+","garden.units/mm-","garden.units/mm*","garden.units/mm-div","garden.units/mm","garden.units/in?","garden.units/in+","garden.units/in-","garden.units/in*","garden.units/in-div","garden.units/in","garden.units/px?","garden.units/px+","garden.units/px-","garden.units/px*","garden.units/px-div","garden.units/px","garden.units/pt?","garden.units/pt+","garden.units/pt-","garden.units/pt*","garden.units/pt-div","garden.units/pt","garden.units/pc?","garden.units/pc+","garden.units/pc-","garden.units/pc*","garden.units/pc-div","garden.units/pc","garden.units/percent?","garden.units/percent+","garden.units/percent-","garden.units/percent*","garden.units/percent-div","garden.units/percent","garden.units/em?","garden.units/em+","garden.units/em-","garden.units/em*","garden.units/em-div","garden.units/em","garden.units/ex?","garden.units/ex+","garden.units/ex-","garden.units/ex*","garden.units/ex-div","garden.units/ex","garden.units/ch?","garden.units/ch+","garden.units/ch-","garden.units/ch*","garden.units/ch-div","garden.units/ch","garden.units/rem?","garden.units/rem+","garden.units/rem-","garden.units/rem*","garden.units/rem-div","garden.units/rem","garden.units/vw?","garden.units/vw+","garden.units/vw-","garden.units/vw*","garden.units/vw-div","garden.units/vw","garden.units/vh?","garden.units/vh+","garden.units/vh-","garden.units/vh*","garden.units/vh-div","garden.units/vh","garden.units/vmin?","garden.units/vmin+","garden.units/vmin-","garden.units/vmin*","garden.units/vmin-div","garden.units/vmin","garden.units/vmax?","garden.units/vmax+","garden.units/vmax-","garden.units/vmax*","garden.units/vmax-div","garden.units/vmax","garden.units/deg?","garden.units/deg+","garden.units/deg-","garden.units/deg*","garden.units/deg-div","garden.units/deg","garden.units/grad?","garden.units/grad+","garden.units/grad-","garden.units/grad*","garden.units/grad-div","garden.units/grad","garden.units/rad?","garden.units/rad+","garden.units/rad-","garden.units/rad*","garden.units/rad-div","garden.units/rad","garden.units/turn?","garden.units/turn+","garden.units/turn-","garden.units/turn*","garden.units/turn-div","garden.units/turn","garden.units/s?","garden.units/s+","garden.units/s-","garden.units/s*","garden.units/s-div","garden.units/s","garden.units/ms?","garden.units/ms+","garden.units/ms-","garden.units/ms*","garden.units/ms-div","garden.units/ms","garden.units/Hz?","garden.units/Hz+","garden.units/Hz-","garden.units/Hz*","garden.units/Hz-div","garden.units/Hz","garden.units/kHz?","garden.units/kHz+","garden.units/kHz-","garden.units/kHz*","garden.units/kHz-div","garden.units/kHz","garden.units/dpi?","garden.units/dpi+","garden.units/dpi-","garden.units/dpi*","garden.units/dpi-div","garden.units/dpi","garden.units/dpcm?","garden.units/dpcm+","garden.units/dpcm-","garden.units/dpcm*","garden.units/dpcm-div","garden.units/dpcm","garden.units/dppx?","garden.units/dppx+","garden.units/dppx-","garden.units/dppx*","garden.units/dppx-div","garden.units/dppx"]],"~:used-vars",["^I",["~$garden.units/ex","~$garden.units/vmin*","~$garden.units/resolution-units","~$garden.units/ms-div","~$garden.units/vmax-","~$garden.units/frequency?","~$garden.units/deg+","~$garden.units/dpi","~$cljs.core/keyword","~$garden.units/turn-","~$garden.units/Hz-div","~$garden.units/grad*","~$garden.units/dpi?","~$garden.units/px-div","~$garden.units/pc?","~$garden.units/vmin-","~$garden.units/ex?","~$garden.units/ms?","~$garden.units/vh*","~$garden.units/vh","~$garden.units/ex+","~$garden.units/turn-div","~$garden.units/in-","~$garden.units/in-div","~$garden.units/px+","~$garden.units/px","~$cljs.core/=","~$garden.units/grad+","~$garden.units/pt-","~$garden.units/px?","~$garden.units/vmax","~$garden.units/rem?","~$garden.units/Hz*","~$garden.units/px*","~$garden.units/s+","~$garden.units/rad?","~$garden.types/CSSUnit","~$garden.units/pt-div","~$garden.units/dppx?","~$garden.units/vw+","~$garden.units/Hz+","~$garden.units/turn*","~$cljs.core/reduce","~$garden.units/time-units","~$garden.units/in?","~$garden.units/pt+","~$garden.units/kHz-","~$garden.units/dppx*","~$garden.units/s-div","~$garden.units/ms+","~$garden.units/pc+","~$garden.units/ms","~$garden.units/vw","~$garden.units/px-","~$garden.units/in+","~$garden.units/length?","~$garden.units/cm","~$garden.units/pc","~$garden.units/grad-","~$garden.units/mm?","~$garden.units/dpi-","~$garden.units/pt?","~$garden.units/dppx-div","~$garden.units/percent","~$garden.units/ex*","~$garden.units/pt*","~$garden.units/dpcm?","~$garden.units/s*","~$garden.units/mm+","~$garden.units/ms*","~$garden.units/pc*","~$garden.units/ch","~$garden.units/deg","~$cljs.core/contains?","~$garden.units/dpcm-","~$garden.units/turn","~$garden.units/kHz*","~$garden.units/vh+","~$garden.units/angle?","~$garden.units/make-unit-divider","~$garden.units/mm*","~$garden.units/cm*","~$garden.units/dpi-div","~$garden.units/rad*","~$garden.units/rem-","~$garden.units/vmax?","~$garden.units/ex-div","~$garden.units/make-unit-predicate","~$garden.units/mm-","~$garden.units/vh?","~$garden.units/rem*","~$garden.units/turn?","~$garden.units/cm+","~$garden.units/resolution?","~$garden.units/deg?","~$garden.units/s-","~$garden.units/ch-div","~$garden.units/cm-","~$garden.units/frequency-units","~$garden.units/em?","~$garden.units/mm","~$garden.units/rem-div","~$garden.units/rad+","~$garden.units/kHz?","~$garden.units/ex-","~$garden.units/ch?","~$garden.units/make-unit-subtractor","~$garden.units/dpcm*","~$garden.units/vh-div","~$garden.units/read-unit","~$garden.units/pc-","~$garden.units/mm-div","~$garden.units/conversions","~$garden.units/grad-div","~$garden.units/deg-","~$garden.units/percent-","~$garden.units/make-unit-multiplier","~$garden.units/kHz","~$garden.units/deg-div","~$garden.units/unit?","~$garden.units/convertable?","~$garden.units/unit-re","~$garden.units/dpcm+","~$garden.units/em+","~$garden.units/make-unit-adder","~$garden.util/format","~$garden.units/percent?","~$garden.units/turn+","~$garden.units/em-","~$garden.units/cm-div","~$cljs.core/ex-info","~$garden.units/Hz-","~$garden.units/rem+","~$garden.units/percent-div","~$garden.units/cm?","~$garden.units/time?","~$garden.units/vh-","~$garden.units/convert","~$garden.units/ch-","~$garden.units/percent*","~$garden.units/vw-div","~$garden.units/dppx","~$garden.units/vmax+","~$garden.units/ch*","~$garden.units/in","~$garden.units/em-div","~$garden.units/make-unit-fn","~$garden.units/vmin+","~$garden.units/em","~$garden.units/in*","~$garden.units/rad","~$garden.units/Hz","~$garden.units/vmin","~$garden.units/dpi*","~$garden.units/vmin?","~$garden.units/rad-div","~$garden.units/vmax*","~$garden.units/ch+","~$garden.units/grad","~$garden.units/em*","~$garden.units/length-units","~$garden.units/s?","~$garden.units/dpcm-div","~$garden.units/Hz?","~$garden.units/grad?","~$garden.units/vw*","~$garden.units/angular-units","~$garden.units/pt","~$garden.units/kHz-div","~$garden.units/rem","~$garden.units/kHz+","~$garden.units/dppx+","~$garden.units/dpcm","~$garden.units/rad-","~$garden.units/vmax-div","~$garden.units/vmin-div","~$cljs.core/name","~$cljs.core/every?","~$garden.units/dpi+","~$garden.units/deg*","~$garden.units/dppx-","~$garden.units/percent+","~$garden.units/ms-","~$garden.units/s","~$garden.units/vw-","~$garden.units/pc-div","~$garden.units/vw?"]]],"~:cache-keys",["~#cmap",[["^1B","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^I",[]],"~:deps-syms",["^11","~$goog.dom.HtmlElement"]]],["^1B","cljs/tools/reader/impl/utils.cljs"],["d87b8bf9f6ce87b207d5ac625236d72923b7d71f","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11","^10","~$clojure.string","~$goog.string"]]],["^1B","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11","~$goog.array","~$goog.asserts"]]],["^1B","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11"]]],["^1B","goog/string/stringformat.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11","^65"]]],["^1B","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11","^66","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^1B","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11","^67","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^6:"]]],["^1B","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11","^67"]]],["^1B","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11"]]],["^1B","garden/units.cljc"],["c54b1d4a503890dd6f9bccea320b8ec76e68bee8","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11","^10","^W","^X","^Z"]]],["^1B","cljs/tools/reader/edn.cljs"],["d87b8bf9f6ce87b207d5ac625236d72923b7d71f","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11","^10","~$cljs.tools.reader.impl.errors","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^65","~$goog.string.StringBuffer"]]],["^1B","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11"]]],["^1B","cljs/tools/reader/impl/inspect.cljs"],["d87b8bf9f6ce87b207d5ac625236d72923b7d71f","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11","^10"]]],["^1B","cljs/tools/reader.cljs"],["d87b8bf9f6ce87b207d5ac625236d72923b7d71f","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11","^10","^6B","^6C","^6D","^6A","^66","^65","^6F"]]],["^1B","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11"]]],["^1B","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11"]]],["^1B","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11","^67"]]],"~:SHADOW-TIMESTAMP",[1608791626000,1608791626000,1608497483000],["^1B","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11","^67","~$goog.reflect"]]],["^1B","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11","^67","~$goog.html.trustedtypes","^6=","^6>","^6?","^6@"]]],["^1B","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11"]]],["^1B","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11"]]],["^1B","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11","^66","^67","~$goog.html.SafeUrl","^6?","^6@","^6:"]]],["^1B","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11","^67","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^6J","^6<","~$goog.html.uncheckedconversions","^6?","^6:"]]],["^1B","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1B","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11","^66","^67","~$goog.dom.TagName","~$goog.dom.tags","^6N","^6O","~$goog.html.SafeStyleSheet","^6J","^6<","^6I","^6=","^6>","~$goog.labs.userAgent.browser","^69","^6?","^6@","^6:"]]],["^1B","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11","^69"]]],["^1B","cljs/reader.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11","^10","^69","^6E","~$cljs.tools.reader.edn","^6F"]]],["^1B","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1B","garden/types.cljc"],["c54b1d4a503890dd6f9bccea320b8ec76e68bee8","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11","^10"]]],["^1B","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11","^66","^67","^65","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1B","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11"]]],["^1B","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11"]]],["^1B","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",[]]],["^1B","garden/util.cljc"],["c54b1d4a503890dd6f9bccea320b8ec76e68bee8","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11","^10","^64","^X","^65","~$goog.string.format"]]],["^1B","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11","^66","^69"]]],["^1B","cljs/tools/reader/impl/errors.cljs"],["d87b8bf9f6ce87b207d5ac625236d72923b7d71f","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11","^10","^6B","^64","~$cljs.tools.reader.impl.inspect"]]],["^1B","clojure/string.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11","^10","^65","^6F"]]],["^1B","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11","~$goog.dom.safe","^6P","^6?","^6:"]]],["^1B","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11"]]],["^1B","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11","^6:"]]],["^1B","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11"]]],["^1B","cljs/tools/reader/reader_types.cljs"],["d87b8bf9f6ce87b207d5ac625236d72923b7d71f","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11","^10","^6C","^65","^6F"]]],["^1B","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11","^66","^67","^6L","~$goog.math"]]],["^1B","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11","^67","^6M","^6N","^6O","^6U","^6J","^6<","^6?","^6:"]]],["^1B","cljs/tools/reader/impl/commons.cljs"],["d87b8bf9f6ce87b207d5ac625236d72923b7d71f","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11","^10","^6A","^6B","^6C"]]],["^1B","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11"]]],["^1B","cljs/core.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11","~$goog.math.Long","~$goog.math.Integer","^65","^69","^66","~$goog.Uri","^6F"]]],["^1B","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11","^67","^6I","^6?","^6@"]]],["^1B","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11","^66","^67","^6O","^69","^6?","^6@","^6:"]]],["^1B","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11","^6H"]]],["^1B","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11","^66","^67","^65"]]],["^1B","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5[",["^ ","^60",null,"^61",["^I",[]],"^62",["^11","^67","^6@"]]]]],"~:clj-info",["^ ","jar:file:/Users/bodyblock/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/source_map/base64.clj",1608497483000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/reader.clj",1608497483000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/string.clj",1608791625000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/env.cljc",1608497483000,"jar:file:/Users/bodyblock/.m2/repository/garden/garden/1.3.10/garden-1.3.10.jar!/garden/util.cljc",1608497507000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/instant.clj",1608791625000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/pprint.clj",1608791625000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/inspect.clj",1608497496000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/core.cljc",1608497483000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/js_deps.cljc",1608497483000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/set.clj",1608791625000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/errors.clj",1608497496000,"jar:file:/Users/bodyblock/.m2/repository/garden/garden/1.3.10/garden-1.3.10.jar!/garden/units.cljc",1608497507000,"jar:file:/Users/bodyblock/.m2/repository/binaryage/devtools/1.0.0/devtools-1.0.0.jar!/devtools/defaults.clj",1608791627000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/java/io.clj",1608791625000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/default_data_readers.clj",1608497496000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj",1608791625000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/util.cljc",1608497483000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/analyzer.cljc",1608497483000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/source_map.clj",1608497483000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/source_map/base64_vlq.clj",1608497483000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/reader_types.clj",1608497496000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/edn.clj",1608791625000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader.clj",1608497496000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/tagged_literals.cljc",1608497483000,"jar:file:/Users/bodyblock/.m2/repository/garden/garden/1.3.10/garden-1.3.10.jar!/garden/types.cljc",1608497507000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/compiler.cljc",1608497483000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/cljs/tools/reader/reader_types.clj",1608497496000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1608497473000,"jar:file:/Users/bodyblock/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/externs.clj",1608497483000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","Functions and macros for working with CSS units.","^7","garden/units.cljc","^8",1,"^9",5,"^:",1,"^;",17],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D"],"^E",["^ ","^F","^G"],"^H",["^I",["^J"]],"^K",["^ ","^F",["^ ","^L",["^M",[["^N"],["^N","^O"]]],"^6","Create a suite of functions for unit creation, conversion,\n  validation, and arithmetic.","^8",260,"^9",4,"^7","garden/units.cljc","^P","^Q","^R","^G","^S",true]],"^P","^G","^U",null,"^V",["^ ","^W","^W","^X","^X","^Y","^X","^Z","^Z","^[","^Z","^10","^10","^11","^11"],"^12",["^I",["^13","^14"]],"^15",["^ ","^16","^W","^17","^X"],"~:defs",["^ ","~$percent",["^ ","^P","^35","^7","garden/units.cljc","^8",297,"^9",1,"^:",297,"^;",17,"^5",["^ ","^7","garden/units.cljc","^8",297,"^9",10,"^:",297,"^;",17],"~:tag","~$function"],"~$make-unit-divider",["^ ","~:protocol-inline",null,"^5",["^ ","^7","garden/units.cljc","^8",241,"^9",7,"^:",241,"^;",24,"^L",["^M",["~$quote",["^M",[["^O"]]]]],"^6","Create a division function for dividing Units."],"^P","^3E","^7","garden/units.cljc","^;",24,"~:method-params",["^M",[["^O"]]],"~:protocol-impl",null,"~:arglists-meta",["^M",[null,null]],"^9",1,"~:variadic?",false,"^8",241,"~:ret-tag","^81","^:",241,"~:max-fixed-arity",1,"~:fn-var",true,"^L",["^M",["^84",["^M",[["^O"]]]]],"^6","Create a division function for dividing Units."],"~$mm?",["^ ","^P","^31","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",292,"^9",1,"^80","^81"],"~$rad-div",["^ ","^P","^59","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",317,"^9",1,"^80","^81"],"~$ch+",["^ ","^P","^5;","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",303,"^9",1,"^80","^81"],"~$vmax?",["^ ","^P","^3K","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",311,"^9",1,"^80","^81"],"~$percent*",["^ ","^P","^4U","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",297,"^9",1,"^80","^81"],"~$dpi-div",["^ ","^P","^3H","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",332,"^9",1,"^80","^81"],"~$s*",["^ ","^P","^39","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",322,"^9",1,"^80","^81"],"~$ms",["^ ","^P","^2U","^7","garden/units.cljc","^8",323,"^9",1,"^:",323,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",323,"^9",10,"^:",323,"^;",12],"^80","^81"],"~$ms*",["^ ","^P","^3;","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",323,"^9",1,"^80","^81"],"~$convertable?",["^ ","^83",null,"^5",["^ ","^7","garden/units.cljc","^8",122,"^9",8,"^:",122,"^;",20,"~:private",true,"^L",["^M",["^84",["^M",[["^O"]]]]],"^6","True if unit is a key of convertable-units, false otherwise."],"^8F",true,"^P","^4B","^7","garden/units.cljc","^;",20,"^85",["^M",[["^O"]]],"^86",null,"^87",["^M",[null,null]],"^9",1,"^88",false,"^8",122,"^89","~$boolean","^:",122,"^8:",1,"^8;",true,"^L",["^M",["^84",["^M",[["^O"]]]]],"^6","True if unit is a key of convertable-units, false otherwise."],"~$dpcm+",["^ ","^P","^4D","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",333,"^9",1,"^80","^81"],"~$dppx*",["^ ","^P","^2Q","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",334,"^9",1,"^80","^81"],"~$ch*",["^ ","^P","^4Y","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",303,"^9",1,"^80","^81"],"~$mm+",["^ ","^P","^3:","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",292,"^9",1,"^80","^81"],"~$rad",["^ ","^P","^54","^7","garden/units.cljc","^8",317,"^9",1,"^:",317,"^;",13,"^5",["^ ","^7","garden/units.cljc","^8",317,"^9",10,"^:",317,"^;",13],"^80","^81"],"~$px-",["^ ","^P","^2W","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",294,"^9",1,"^80","^81"],"~$cm-div",["^ ","^P","^4K","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",291,"^9",1,"^80","^81"],"~$turn+",["^ ","^P","^4I","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",318,"^9",1,"^80","^81"],"~$length?",["^ ","^83",null,"^5",["^ ","^7","garden/units.cljc","^8",42,"^9",7,"^:",42,"^;",14,"^L",["^M",["^84",["^M",[["~$x"]]]]]],"^P","^2Y","^7","garden/units.cljc","^;",14,"^85",["^M",[["~$x"]]],"^86",null,"^87",["^M",[null,null]],"^9",1,"^88",false,"^8",42,"^89","^8G","^:",42,"^8:",1,"^8;",true,"^L",["^M",["^84",["^M",[["~$x"]]]]]],"~$grad",["^ ","^P","^5<","^7","garden/units.cljc","^8",316,"^9",1,"^:",316,"^;",14,"^5",["^ ","^7","garden/units.cljc","^8",316,"^9",10,"^:",316,"^;",14],"^80","^81"],"~$dppx-",["^ ","^P","^5R","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",334,"^9",1,"^80","^81"],"~$percent+",["^ ","^P","^5S","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",297,"^9",1,"^80","^81"],"~$em*",["^ ","^P","^5=","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",301,"^9",1,"^80","^81"],"~$ms-",["^ ","^P","^5T","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",323,"^9",1,"^80","^81"],"~$dpi+",["^ ","^P","^5P","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",332,"^9",1,"^80","^81"],"~$vh+",["^ ","^P","^3C","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",309,"^9",1,"^80","^81"],"~$rad*",["^ ","^P","^3I","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",317,"^9",1,"^80","^81"],"~$kHz-div",["^ ","^P","^5F","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",328,"^9",1,"^80","^81"],"~$vmax+",["^ ","^P","^4X","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",311,"^9",1,"^80","^81"],"~$vw-div",["^ ","^P","^4V","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",308,"^9",1,"^80","^81"],"~$mm-",["^ ","^P","^3N","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",292,"^9",1,"^80","^81"],"~$in",["^ ","^P","^4Z","^7","garden/units.cljc","^8",293,"^9",1,"^:",293,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",293,"^9",10,"^:",293,"^;",12],"^80","^81"],"~$pt*",["^ ","^P","^37","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",295,"^9",1,"^80","^81"],"~$make-unit-subtractor",["^ ","^83",null,"^5",["^ ","^7","garden/units.cljc","^8",209,"^9",7,"^:",209,"^;",27,"^L",["^M",["^84",["^M",[["^O"]]]]],"^6","Create a subtraction function for subtracting Units."],"^P","^44","^7","garden/units.cljc","^;",27,"^85",["^M",[["^O"]]],"^86",null,"^87",["^M",[null,null]],"^9",1,"^88",false,"^8",209,"^89","^81","^:",209,"^8:",1,"^8;",true,"^L",["^M",["^84",["^M",[["^O"]]]]],"^6","Create a subtraction function for subtracting Units."],"~$mm-div",["^ ","^P","^49","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",292,"^9",1,"^80","^81"],"~$vmin",["^ ","^P","^56","^7","garden/units.cljc","^8",310,"^9",1,"^:",310,"^;",14,"^5",["^ ","^7","garden/units.cljc","^8",310,"^9",10,"^:",310,"^;",14],"^80","^81"],"~$mm",["^ ","^P","^3Z","^7","garden/units.cljc","^8",292,"^9",1,"^:",292,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",292,"^9",10,"^:",292,"^;",12],"^80","^81"],"~$em?",["^ ","^P","^3Y","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",301,"^9",1,"^80","^81"],"~$cm?",["^ ","^P","^4P","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",291,"^9",1,"^80","^81"],"~$time?",["^ ","^83",null,"^5",["^ ","^7","garden/units.cljc","^8",52,"^9",7,"^:",52,"^;",12,"^L",["^M",["^84",["^M",[["~$x"]]]]]],"^P","^4Q","^7","garden/units.cljc","^;",12,"^85",["^M",[["~$x"]]],"^86",null,"^87",["^M",[null,null]],"^9",1,"^88",false,"^8",52,"^89","^8G","^:",52,"^8:",1,"^8;",true,"^L",["^M",["^84",["^M",[["~$x"]]]]]],"~$dpi?",["^ ","^P","^1Z","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",332,"^9",1,"^80","^81"],"~$make-unit-multiplier",["^ ","^83",null,"^5",["^ ","^7","garden/units.cljc","^8",222,"^9",7,"^:",222,"^;",27,"^L",["^M",["^84",["^M",[["^O"]]]]],"^6","Create a multiplication function for multiplying Units."],"^P","^4>","^7","garden/units.cljc","^;",27,"^85",["^M",[["^O"]]],"^86",null,"^87",["^M",[null,null]],"^9",1,"^88",false,"^8",222,"^89","^81","^:",222,"^8:",1,"^8;",true,"^L",["^M",["^84",["^M",[["^O"]]]]],"^6","Create a multiplication function for multiplying Units."],"~$vmin-",["^ ","^P","^21","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",310,"^9",1,"^80","^81"],"~$unit?",["^ ","^83",null,"^5",["^ ","^7","garden/units.cljc","^8",37,"^9",7,"^:",37,"^;",12,"^L",["^M",["^84",["^M",[["~$x"]]]]],"^6","True if x is of type CSSUnit."],"^P","^4A","^7","garden/units.cljc","^;",12,"^85",["^M",[["~$x"]]],"^86",null,"^87",["^M",[null,null]],"^9",1,"^88",false,"^8",37,"^89","^8G","^:",37,"^8:",1,"^8;",true,"^L",["^M",["^84",["^M",[["~$x"]]]]],"^6","True if x is of type CSSUnit."],"~$deg-div",["^ ","^P","^4@","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",315,"^9",1,"^80","^81"],"~$vw-",["^ ","^P","^5V","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",308,"^9",1,"^80","^81"],"~$ch-",["^ ","^P","^4T","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",303,"^9",1,"^80","^81"],"~$kHz",["^ ","^P","^4?","^7","garden/units.cljc","^8",328,"^9",1,"^:",328,"^;",13,"^5",["^ ","^7","garden/units.cljc","^8",328,"^9",10,"^:",328,"^;",13],"^80","^81"],"~$convert",["^ ","^83",null,"^5",["^ ","^7","garden/units.cljc","^8",127,"^9",8,"^:",127,"^;",15,"^8F",true,"^L",["^M",["^84",["^M",[[["^ ","~$m","~:magnitude","~$left","~:unit"],"~$right"]]]]],"^6","Convert a Unit with :unit left to a Unit with :unit right if possible."],"^8F",true,"^P","^4S","^7","garden/units.cljc","^;",15,"^85",["^M",[["~$p__68785","^9F"]]],"^86",null,"^87",["^M",[null,null]],"^9",1,"^88",false,"^8",127,"^89","^2F","^:",127,"^8:",2,"^8;",true,"^L",["^M",["^84",["^M",[[["^ ","~$m","^9C","^9D","^9E"],"^9F"]]]]],"^6","Convert a Unit with :unit left to a Unit with :unit right if possible."],"~$resolution?",["^ ","^83",null,"^5",["^ ","^7","garden/units.cljc","^8",62,"^9",7,"^:",62,"^;",18,"^L",["^M",["^84",["^M",[["~$x"]]]]]],"^P","^3S","^7","garden/units.cljc","^;",18,"^85",["^M",[["~$x"]]],"^86",null,"^87",["^M",[null,null]],"^9",1,"^88",false,"^8",62,"^89","^8G","^:",62,"^8:",1,"^8;",true,"^L",["^M",["^84",["^M",[["~$x"]]]]]],"~$ch-div",["^ ","^P","^3V","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",303,"^9",1,"^80","^81"],"~$cm-",["^ ","^P","^3W","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",291,"^9",1,"^80","^81"],"~$pt",["^ ","^P","^5E","^7","garden/units.cljc","^8",295,"^9",1,"^:",295,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",295,"^9",10,"^:",295,"^;",12],"^80","^81"],"~$frequency-units",["^ ","^P","^3X","^7","garden/units.cljc","^8",29,"^9",1,"^:",29,"^;",21,"^5",["^ ","^7","garden/units.cljc","^8",29,"^9",6,"^:",29,"^;",21],"^80","~$cljs.core/ISet"],"~$grad?",["^ ","^P","^5B","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",316,"^9",1,"^80","^81"],"~$vh?",["^ ","^P","^3O","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",309,"^9",1,"^80","^81"],"~$make-unit-adder",["^ ","^83",null,"^5",["^ ","^7","garden/units.cljc","^8",195,"^9",7,"^:",195,"^;",22,"^L",["^M",["^84",["^M",[["^O"]]]]],"^6","Create a addition function for adding Units."],"^P","^4F","^7","garden/units.cljc","^;",22,"^85",["^M",[["^O"]]],"^86",null,"^87",["^M",[null,null]],"^9",1,"^88",false,"^8",195,"^89","^81","^:",195,"^8:",1,"^8;",true,"^L",["^M",["^84",["^M",[["^O"]]]]],"^6","Create a addition function for adding Units."],"~$vmin*",["^ ","^P","^1O","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",310,"^9",1,"^80","^81"],"~$dpcm*",["^ ","^P","^45","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",333,"^9",1,"^80","^81"],"~$read-unit",["^ ","^83",null,"^5",["^ ","^7","garden/units.cljc","^8",157,"^9",7,"^:",157,"^;",16,"^L",["^M",["^84",["^M",[["~$s"]]]]],"^6","Read a `CSSUnit` object from the string `s`."],"^P","^47","^7","garden/units.cljc","^;",16,"^85",["^M",[["~$s"]]],"^86",null,"^87",["^M",[null,null]],"^9",1,"^88",false,"^8",157,"^89",["^I",["^2F","~$clj-nil"]],"^:",157,"^8:",1,"^8;",true,"^L",["^M",["^84",["^M",[["~$s"]]]]],"^6","Read a `CSSUnit` object from the string `s`."],"~$pc-",["^ ","^P","^48","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",296,"^9",1,"^80","^81"],"~$rad-",["^ ","^P","^5K","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",317,"^9",1,"^80","^81"],"~$px*",["^ ","^P","^2C","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",294,"^9",1,"^80","^81"],"~$rem+",["^ ","^P","^4N","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",304,"^9",1,"^80","^81"],"~$Hz-",["^ ","^P","^4M","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",327,"^9",1,"^80","^81"],"~$length-units",["^ ","^P","^5>","^7","garden/units.cljc","^8",20,"^9",1,"^:",20,"^;",18,"^5",["^ ","^7","garden/units.cljc","^8",20,"^9",6,"^:",20,"^;",18],"^80","^9M"],"~$Hz+",["^ ","^P","^2J","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",327,"^9",1,"^80","^81"],"~$pc?",["^ ","^P","^20","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",296,"^9",1,"^80","^81"],"~$pt-div",["^ ","^P","^2G","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",295,"^9",1,"^80","^81"],"~$grad*",["^ ","^P","^1Y","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",316,"^9",1,"^80","^81"],"~$s+",["^ ","^P","^2D","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",322,"^9",1,"^80","^81"],"~$vh*",["^ ","^P","^24","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",309,"^9",1,"^80","^81"],"~$s?",["^ ","^P","^5?","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",322,"^9",1,"^80","^81"],"~$turn-div",["^ ","^P","^27","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",318,"^9",1,"^80","^81"],"~$vh-",["^ ","^P","^4R","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",309,"^9",1,"^80","^81"],"~$ex+",["^ ","^P","^26","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",302,"^9",1,"^80","^81"],"~$em+",["^ ","^P","^4E","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",301,"^9",1,"^80","^81"],"~$vmax-",["^ ","^P","^1R","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",311,"^9",1,"^80","^81"],"~$frequency?",["^ ","^83",null,"^5",["^ ","^7","garden/units.cljc","^8",57,"^9",7,"^:",57,"^;",17,"^L",["^M",["^84",["^M",[["~$x"]]]]]],"^P","^1S","^7","garden/units.cljc","^;",17,"^85",["^M",[["~$x"]]],"^86",null,"^87",["^M",[null,null]],"^9",1,"^88",false,"^8",57,"^89","^8G","^:",57,"^8:",1,"^8;",true,"^L",["^M",["^84",["^M",[["~$x"]]]]]],"~$vmin+",["^ ","^P","^51","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",310,"^9",1,"^80","^81"],"~$deg+",["^ ","^P","^1T","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",315,"^9",1,"^80","^81"],"~$grad+",["^ ","^P","^2=","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",316,"^9",1,"^80","^81"],"~$dpi*",["^ ","^P","^57","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",332,"^9",1,"^80","^81"],"~$pt-",["^ ","^P","^2>","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",295,"^9",1,"^80","^81"],"~$deg*",["^ ","^P","^5Q","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",315,"^9",1,"^80","^81"],"~$vmax*",["^ ","^P","^5:","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",311,"^9",1,"^80","^81"],"~$grad-",["^ ","^P","^30","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",316,"^9",1,"^80","^81"],"~$vmin?",["^ ","^P","^58","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",310,"^9",1,"^80","^81"],"~$Hz*",["^ ","^P","^2B","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",327,"^9",1,"^80","^81"],"~$vw+",["^ ","^P","^2I","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",308,"^9",1,"^80","^81"],"~$vw?",["^ ","^P","^5X","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",308,"^9",1,"^80","^81"],"~$pt+",["^ ","^P","^2O","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",295,"^9",1,"^80","^81"],"~$in?",["^ ","^P","^2N","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",293,"^9",1,"^80","^81"],"~$dpcm-div",["^ ","^P","^5@","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",333,"^9",1,"^80","^81"],"~$ex*",["^ ","^P","^36","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",302,"^9",1,"^80","^81"],"~$Hz?",["^ ","^P","^5A","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",327,"^9",1,"^80","^81"],"~$px+",["^ ","^P","^2:","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",294,"^9",1,"^80","^81"],"~$s-div",["^ ","^P","^2R","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",322,"^9",1,"^80","^81"],"^J",["^ ","^P","^5G","^7","garden/units.cljc","^8",304,"^9",1,"^:",304,"^;",13,"^5",["^ ","^7","garden/units.cljc","^8",304,"^9",10,"^:",304,"^;",13],"^80","^81"],"~$em",["^ ","^P","^52","^7","garden/units.cljc","^8",301,"^9",1,"^:",301,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",301,"^9",10,"^:",301,"^;",12],"^80","^81"],"~$em-div",["^ ","^P","^4[","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",301,"^9",1,"^80","^81"],"~$make-unit-fn",["^ ","^83",null,"^5",["^ ","^7","garden/units.cljc","^8",170,"^9",7,"^:",170,"^;",19,"^L",["^M",["^84",["^M",[["^O"]]]]],"^6","Creates a function for creating and converting `CSSUnit`s for the\n  given unit. If a number n is passed the function it will produce a\n  new `CSSUnit` record with a the magnitude set to n. If a `CSSUnit`\n  is passed the function will attempt to convert it."],"^P","^50","^7","garden/units.cljc","^;",19,"^85",["^M",[["^O"]]],"^86",null,"^87",["^M",[null,null]],"^9",1,"^88",false,"^8",170,"^89","^81","^:",170,"^8:",1,"^8;",true,"^L",["^M",["^84",["^M",[["^O"]]]]],"^6","Creates a function for creating and converting `CSSUnit`s for the\n  given unit. If a number n is passed the function it will produce a\n  new `CSSUnit` record with a the magnitude set to n. If a `CSSUnit`\n  is passed the function will attempt to convert it."],"~$dppx",["^ ","^P","^4W","^7","garden/units.cljc","^8",334,"^9",1,"^:",334,"^;",14,"^5",["^ ","^7","garden/units.cljc","^8",334,"^9",10,"^:",334,"^;",14],"^80","^81"],"~$px",["^ ","^P","^2;","^7","garden/units.cljc","^8",294,"^9",1,"^:",294,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",294,"^9",10,"^:",294,"^;",12],"^80","^81"],"~$px?",["^ ","^P","^2?","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",294,"^9",1,"^80","^81"],"~$vmax-div",["^ ","^P","^5L","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",311,"^9",1,"^80","^81"],"~$rem?",["^ ","^P","^2A","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",304,"^9",1,"^80","^81"],"~$vmin-div",["^ ","^P","^5M","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",310,"^9",1,"^80","^81"],"~$Hz",["^ ","^P","^55","^7","garden/units.cljc","^8",327,"^9",1,"^:",327,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",327,"^9",10,"^:",327,"^;",12],"^80","^81"],"~$in*",["^ ","^P","^53","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",293,"^9",1,"^80","^81"],"~$dpcm",["^ ","^P","^5J","^7","garden/units.cljc","^8",333,"^9",1,"^:",333,"^;",14,"^5",["^ ","^7","garden/units.cljc","^8",333,"^9",10,"^:",333,"^;",14],"^80","^81"],"~$dppx+",["^ ","^P","^5I","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",334,"^9",1,"^80","^81"],"~$ms?",["^ ","^P","^23","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",323,"^9",1,"^80","^81"],"~$pc",["^ ","^P","^2[","^7","garden/units.cljc","^8",296,"^9",1,"^:",296,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",296,"^9",10,"^:",296,"^;",12],"^80","^81"],"~$pt?",["^ ","^P","^33","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",295,"^9",1,"^80","^81"],"~$dppx-div",["^ ","^P","^34","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",334,"^9",1,"^80","^81"],"~$kHz*",["^ ","^P","^3B","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",328,"^9",1,"^80","^81"],"~$dpi-",["^ ","^P","^32","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",332,"^9",1,"^80","^81"],"~$px-div",["^ ","^P","^1[","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",294,"^9",1,"^80","^81"],"~$mm*",["^ ","^P","^3F","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",292,"^9",1,"^80","^81"],"~$in-",["^ ","^P","^28","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",293,"^9",1,"^80","^81"],"~$pc-div",["^ ","^P","^5W","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",296,"^9",1,"^80","^81"],"~$s",["^ ","^P","^5U","^7","garden/units.cljc","^8",322,"^9",1,"^:",322,"^;",11,"^5",["^ ","^7","garden/units.cljc","^8",322,"^9",10,"^:",322,"^;",11],"^80","^81"],"~$vh",["^ ","^P","^25","^7","garden/units.cljc","^8",309,"^9",1,"^:",309,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",309,"^9",10,"^:",309,"^;",12],"^80","^81"],"~$pc*",["^ ","^P","^3<","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",296,"^9",1,"^80","^81"],"~$pc+",["^ ","^P","^2T","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",296,"^9",1,"^80","^81"],"~$ms+",["^ ","^P","^2S","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",323,"^9",1,"^80","^81"],"~$kHz+",["^ ","^P","^5H","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",328,"^9",1,"^80","^81"],"~$vw",["^ ","^P","^2V","^7","garden/units.cljc","^8",308,"^9",1,"^:",308,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",308,"^9",10,"^:",308,"^;",12],"^80","^81"],"~$deg",["^ ","^P","^3>","^7","garden/units.cljc","^8",315,"^9",1,"^:",315,"^;",13,"^5",["^ ","^7","garden/units.cljc","^8",315,"^9",10,"^:",315,"^;",13],"^80","^81"],"~$vw*",["^ ","^P","^5C","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",308,"^9",1,"^80","^81"],"~$kHz-",["^ ","^P","^2P","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",328,"^9",1,"^80","^81"],"~$ch",["^ ","^P","^3=","^7","garden/units.cljc","^8",303,"^9",1,"^:",303,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",303,"^9",10,"^:",303,"^;",12],"^80","^81"],"~$angular-units",["^ ","^P","^5D","^7","garden/units.cljc","^8",23,"^9",1,"^:",23,"^;",19,"^5",["^ ","^7","garden/units.cljc","^8",23,"^9",6,"^:",23,"^;",19],"^80","^9M"],"~$dpcm-",["^ ","^P","^3@","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",333,"^9",1,"^80","^81"],"~$turn",["^ ","^P","^3A","^7","garden/units.cljc","^8",318,"^9",1,"^:",318,"^;",14,"^5",["^ ","^7","garden/units.cljc","^8",318,"^9",10,"^:",318,"^;",14],"^80","^81"],"~$turn-",["^ ","^P","^1W","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",318,"^9",1,"^80","^81"],"~$Hz-div",["^ ","^P","^1X","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",327,"^9",1,"^80","^81"],"~$in+",["^ ","^P","^2X","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",293,"^9",1,"^80","^81"],"~$dpi",["^ ","^P","^1U","^7","garden/units.cljc","^8",332,"^9",1,"^:",332,"^;",13,"^5",["^ ","^7","garden/units.cljc","^8",332,"^9",10,"^:",332,"^;",13],"^80","^81"],"~$cm",["^ ","^P","^2Z","^7","garden/units.cljc","^8",291,"^9",1,"^:",291,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",291,"^9",10,"^:",291,"^;",12],"^80","^81"],"~$cm*",["^ ","^P","^3G","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",291,"^9",1,"^80","^81"],"~$angle?",["^ ","^83",null,"^5",["^ ","^7","garden/units.cljc","^8",47,"^9",7,"^:",47,"^;",13,"^L",["^M",["^84",["^M",[["~$x"]]]]]],"^P","^3D","^7","garden/units.cljc","^;",13,"^85",["^M",[["~$x"]]],"^86",null,"^87",["^M",[null,null]],"^9",1,"^88",false,"^8",47,"^89","^8G","^:",47,"^8:",1,"^8;",true,"^L",["^M",["^84",["^M",[["~$x"]]]]]],"~$ex?",["^ ","^P","^22","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",302,"^9",1,"^80","^81"],"~$grad-div",["^ ","^P","^4;","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",316,"^9",1,"^80","^81"],"~$rem-",["^ ","^P","^3J","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",304,"^9",1,"^80","^81"],"~$deg?",["^ ","^P","^3T","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",315,"^9",1,"^80","^81"],"~$ms-div",["^ ","^P","^1Q","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",323,"^9",1,"^80","^81"],"~$s-",["^ ","^P","^3U","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",322,"^9",1,"^80","^81"],"~$resolution-units",["^ ","^P","^1P","^7","garden/units.cljc","^8",32,"^9",1,"^:",32,"^;",22,"^5",["^ ","^7","garden/units.cljc","^8",32,"^9",6,"^:",32,"^;",22],"^80","^9M"],"~$cm+",["^ ","^P","^3R","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",291,"^9",1,"^80","^81"],"~$ex",["^ ","^P","^1N","^7","garden/units.cljc","^8",302,"^9",1,"^:",302,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",302,"^9",10,"^:",302,"^;",12],"^80","^81"],"~$dpcm?",["^ ","^P","^38","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",333,"^9",1,"^80","^81"],"~$rem*",["^ ","^P","^3P","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",304,"^9",1,"^80","^81"],"~$ch?",["^ ","^P","^43","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",303,"^9",1,"^80","^81"],"~$kHz?",["^ ","^P","^41","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",328,"^9",1,"^80","^81"],"~$rem-div",["^ ","^P","^3[","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",304,"^9",1,"^80","^81"],"~$conversions",["^ ","^5",["^ ","^7","garden/units.cljc","^8",71,"^9",3,"^:",71,"^;",14,"^8F",true,"^6","Map associating CSS unit types to their conversion values."],"^8F",true,"^P","^4:","^7","garden/units.cljc","^;",14,"^9",1,"^8",69,"^:",71,"^80","~$cljs.core/IMap","^6","Map associating CSS unit types to their conversion values."],"~$dppx?",["^ ","^P","^2H","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",334,"^9",1,"^80","^81"],"~$percent-div",["^ ","^P","^4O","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",297,"^9",1,"^80","^81"],"~$deg-",["^ ","^P","^4<","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",315,"^9",1,"^80","^81"],"~$rad?",["^ ","^P","^2E","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",317,"^9",1,"^80","^81"],"~$percent-",["^ ","^P","^4=","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",297,"^9",1,"^80","^81"],"~$turn*",["^ ","^P","^2K","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",318,"^9",1,"^80","^81"],"~$time-units",["^ ","^P","^2M","^7","garden/units.cljc","^8",26,"^9",1,"^:",26,"^;",16,"^5",["^ ","^7","garden/units.cljc","^8",26,"^9",6,"^:",26,"^;",16],"^80","^9M"],"~$make-unit-predicate",["^ ","^83",null,"^5",["^ ","^7","garden/units.cljc","^8",165,"^9",7,"^:",165,"^;",26,"^L",["^M",["^84",["^M",[["^O"]]]]],"^6","Creates a function for verifying the given unit type."],"^P","^3M","^7","garden/units.cljc","^;",26,"^85",["^M",[["^O"]]],"^86",null,"^87",["^M",[null,null]],"^9",1,"^88",false,"^8",165,"^89","^81","^:",165,"^8:",1,"^8;",true,"^L",["^M",["^84",["^M",[["^O"]]]]],"^6","Creates a function for verifying the given unit type."],"~$in-div",["^ ","^P","^29","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",293,"^9",1,"^80","^81"],"~$ex-div",["^ ","^P","^3L","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",302,"^9",1,"^80","^81"],"~$turn?",["^ ","^P","^3Q","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",318,"^9",1,"^80","^81"],"~$unit-re",["^ ","^5",["^ ","^7","garden/units.cljc","^8",154,"^9",3,"^:",154,"^;",10,"^6","Regular expression for matching a CSS unit. The magnitude\n             and unit are captured.","^8F",true],"^8F",true,"^P","^4C","^7","garden/units.cljc","^;",10,"^9",1,"^8",151,"^:",154,"^80","~$any","^6","Regular expression for matching a CSS unit. The magnitude\n             and unit are captured."],"~$vh-div",["^ ","^P","^46","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",309,"^9",1,"^80","^81"],"~$percent?",["^ ","^P","^4H","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",297,"^9",1,"^80","^81"],"~$rad+",["^ ","^P","^40","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",317,"^9",1,"^80","^81"],"~$vmax",["^ ","^P","^2@","^7","garden/units.cljc","^8",311,"^9",1,"^:",311,"^;",14,"^5",["^ ","^7","garden/units.cljc","^8",311,"^9",10,"^:",311,"^;",14],"^80","^81"],"~$em-",["^ ","^P","^4J","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",301,"^9",1,"^80","^81"],"~$ex-",["^ ","^P","^42","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",302,"^9",1,"^80","^81"]],"^14",["^ ","^G","^G","^10","^10","^W","^W"],"~:cljs.analyzer/constants",["^ ","^12",["^I",["~:mm","~:vmin","~:kHz","~:given","~:pt","~:else","^9E","~:%","~:px","~:rem","~:em","~:dppx","~:dpcm","~:Hz","~:pc","^9C","~:vh","~:s","~:ch","~:vw","~:deg","~:dpi","~:cm","~:turn","~:ex","~:vmax","~:x","~:ms","~:rad","~:grad","~:in"]],"~:order",["^<F","^<J","^<L","^<R","^<X","^=3","^<V","^<Y","^=1","^=2","~:s","^=0","^<H","^<Q","^<O","^<P","^<W","^9E","^<M","^<N","^9C","^<K","^<I","~:x","~:%","^<Z","^<T","^<U","^<S","^<G","^<["]],"^1>",["^ ","^13",["^I",[]],"^14",["^I",[]]],"^1?",["^ "],"^1@",["^11","^10","^W","^X","^Z"]],"^R","^G","~:ns-specs",["^ "],"~:ns-spec-vars",["^I",[]],"~:compiler-options",["^5Z",[["^=7","~:static-fns"],true,["^=7","~:shadow-tweaks"],null,["^=7","~:source-map-inline"],null,["^=7","~:elide-asserts"],false,["^=7","~:optimize-constants"],null,["^=7","^1E"],null,["^=7","~:external-config"],null,["^=7","~:tooling-config"],null,["^=7","~:emit-constants"],null,["^=7","~:load-tests"],null,["^=7","~:form-size-threshold"],null,["^=7","~:data-readers"],null,["^=7","~:infer-externs"],"~:auto",["^=7","^1G"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^=7","~:fn-invoke-direct"],null,["^=7","~:source-map"],"/dev/null"]]]